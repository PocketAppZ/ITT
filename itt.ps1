
################################################################################################################
###                                                                                                          ###
###  This file is automatically generated                                                                    ###
###                                                                                                          ###
################################################################################################################


<#
.Dev
    Author         : Emad Adel @emadadel4
    GitHub         : https://github.com/emadadel4
    Website        : https://eprojects.orgfree.com/
    Version        : 24.04.26
#>

if (!(Test-Path -Path $ENV:TEMP)) {
    New-Item -ItemType Directory -Force -Path $ENV:TEMP
}

# Load DLLs
Add-Type -AssemblyName PresentationFramework
Add-Type -AssemblyName PresentationCore
Add-Type -AssemblyName PresentationFramework.Aero


# Variable to sync between runspaces
$sync = [Hashtable]::Synchronized(@{})
$sync.PSScriptRoot = $PSScriptRoot
$sync.version = "24.04.26"
$sync.github = "https://github.com/emadadel4"
$sync.website = "https://eprojects.orgfree.com"
$sync.author = "Emad Adel @emadadel4"
$sync.registryPath = "HKCU:\Software\ITTEmadadel"
$sync.configs = @{}
$sync.ProcessRunning = $false

$sync.theme = "Light"
$sync.isDarkMode = $sync.theme
$sync.mediaPlayer = New-Object -ComObject WMPlayer.OCX


$currentPid = [System.Security.Principal.WindowsIdentity]::GetCurrent()
$principal = new-object System.Security.Principal.WindowsPrincipal($currentPid)
$adminRole=[System.Security.Principal.WindowsBuiltInRole]::Administrator



if ($principal.IsInRole($adminRole))
{
    $Host.UI.RawUI.WindowTitle = $myInvocation.MyCommand.Definition + "(Admin)"
    clear-host
}
else
{
    $newProcess = new-object System.Diagnostics.ProcessStartInfo "PowerShell";
    $newProcess.Arguments = $myInvocation.MyCommand.Definition;
    $newProcess.Verb = "runas";
    [System.Diagnostics.Process]::Start($newProcess);
    break
}

# Check if the registry path exists
if (!(Test-Path $sync.registryPath)) {
    # If it doesn't exist, create it
    New-Item -Path $sync.registryPath -Force *> $null
}

#===========================================================================
#region Start functions
#===========================================================================

function About{

    $authorInfo = @"
        Author   : $($sync.author)
        GitHub   : $($sync.github)
        Website  : $($sync.website)
        Version  : $($sync.version)
"@

    Show-CustomDialog -Message $authorInfo -Width 400 
}
#region Function to filter a list based on a search input
    function Search{
        
        # Retrieves the search input, converts it to lowercase, and filters the list based on the input
        $filter = $sync['window'].FindName('searchInput').Text.ToLower()
        $collectionView = [System.Windows.Data.CollectionViewSource]::GetDefaultView($sync['window'].FindName('list').Items)
        $collectionView.Filter = {
            param($item)
            $item -like "*$filter*"
        }

    }

    function FilterByCat {
        param (
            $Cat
        )

        $collectionView = [System.Windows.Data.CollectionViewSource]::GetDefaultView($sync['window'].FindName('list').Items)

        # Define the filter predicate
        $filterPredicate = {
            param($item)

            # Define the tag you want to filter by
            $tagToFilter =  $Cat
            # Check if the item has the tag
            $itemTag = $item.Tag
            return $itemTag -eq $tagToFilter
        }


        if($Cat -eq "All")
        {

            $sync['window'].FindName('list').Clear()
            $collectionView = [System.Windows.Data.CollectionViewSource]::GetDefaultView($sync['window'].FindName('list').Items)
            $collectionView.Filter = $null
            
        }else{

            $sync['window'].FindName('list').Clear()
            # Apply the filter to the collection view
            $collectionView.Filter = $filterPredicate

        }


        
    }

    function ClearFilter {

        $sync['window'].FindName('list').Clear()
        $collectionView = [System.Windows.Data.CollectionViewSource]::GetDefaultView($sync['window'].FindName('list').Items)
        $collectionView.Filter = $null
    }
#endregion

function CheckChoco 
{

    try {

    if((Get-Command -Name choco -ErrorAction Ignore))
    {
 
        echo "  ___ _____ _____   _____ __  __    _    ____       _    ____  _____ _    _  _   ";
        echo " |_ _|_   _|_   _| | ____|  \/  |  / \  |  _ \     / \  |  _ \| ____| |  | || |  ";
        echo "  | |  | |   | |   |  _| | |\/| | / _ \ | | | |   / _ \ | | | |  _| | |  | || |_ ";
        echo "  | |  | |   | |   | |___| |  | |/ ___ \| |_| |  / ___ \| |_| | |___| |__|__   _|";
        echo " |___| |_|   |_|   |_____|_|  |_/_/   \_\____/  /_/   \_\____/|_____|_____| |_|  ";
        echo "                                                                                 ";
        
        echo "This is Emad adel an Binary ";
        echo "01000101 01001101 01000001 01000100  01000001 01000100 01000101 01001100      ";
        echo "Chocolatey is installed You Good to go  ";
                               
        return
        }

        Write-Host "Chocolatey is not installed, installing now"
        Set-ExecutionPolicy Bypass -Scope Process -Force; Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')) -ErrorAction Stop
        powershell choco feature enable -n allowGlobalConfirmation
    }
    Catch {
        Write-Host "--Chocolatey failed to install---"
    }
}
function Get-SelectedApps {

    $items = @()

    foreach ($item in $sync.AppsListView.Items)
    {
        if ($item.IsChecked)
        {
            foreach ($program in $sync.configs.applications)
            {
                if($item.Content -eq $program.name)
                {
                    $items += $program.choco
                }
            }
        }
    }

    return $items 
}

function Get-SelectedTweeaks {

    $items = @()

    foreach ($item in $sync.TweeaksListView.Items)
    {
        if ($item.IsChecked)
        {
            foreach ($tweeak in $sync.configs.tweaks)
            {

                if($item.Content -eq $tweeak.name)
                {
                    $items += $tweeak.script
                }
            }
        }
    }

    return $items 
}

function Invoke-Install{


    if($sync.ProcessRunning)
    {
        $msg = "An Install process is currently running."
        [System.Windows.MessageBox]::Show($msg, "ITT", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Warning)
        return
    }
  
    $choco += Get-SelectedApps

    if(Get-SelectedApps -ne $null)
    {

        Invoke-RunspaceWithScriptBlock -ArgumentList  $choco -ScriptBlock {

            param($choco)
            
            try{

                $msg = [System.Windows.MessageBox]::Show("Do you want to Install selected program(s)", "ITT @emadadel", [System.Windows.MessageBoxButton]::YesNo, [System.Windows.MessageBoxImage]::Question)

                if($msg -eq "Yes")
                {

                    $chocoTempPath = Join-Path $env:TEMP "chocolatey"

                    if (Test-Path $chocoTempPath) {
                        Remove-Item -Path $chocoTempPath -Force -Recurse
                        Write-Output "Clear Chocolatey temp folder"
                    }


                    $sync.ProcessRunning = $true

                    $sync.installBtn.Dispatcher.Invoke([Action]{
                        $sync.installBtn.Content = "Installing..."
                    })

                   
                    $sync.Description.Dispatcher.Invoke([Action]{
                        $sync.Description.Text = "Downloading and Installing..."
                    })

                    Write-Host "Installing the following programs $choco "
                    Start-Process -FilePath "choco" -ArgumentList "install $choco -y --force --ignore-checksums" -NoNewWindow -Wait
                    Write-Host "Installs have finished"
                    [System.Windows.MessageBox]::Show("Installation Successfully Completed", "ITT @emadadel4", "OK", "Information")


                    $sync.description.Dispatcher.Invoke([Action]{
                        $sync.description.Text = "Installed successfully"
                    })

                  
        
                    Start-Sleep -Seconds 1
                    $sync.ProcessRunning = $False


                    $sync.installBtn.Dispatcher.Invoke([Action]{
                        $sync.installBtn.Content = "Install"
                    })
                  
                   
                }
                else
                {
                    # Uncheck all checkboxes in $list
                    $sync.AppsListView.Dispatcher.Invoke([Action]{
                        foreach ($item in $sync.AppsListView.Items)
                        {
                            $item.IsChecked = $false
                        }
                    })
                 
                }
            }
            Catch
            {
                Write-Host "Error: $_"
            }

          
        }
    }
    else
    {
        [System.Windows.MessageBox]::Show("Select at lest one program", "ITT @emadadel", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Question)
    }
}
function ApplyTweaks() {

    if($sync.ProcessRunning)
    {
        $msg = "An Install process is currently running."
        [System.Windows.MessageBox]::Show($msg, "ITT", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Warning)
        return
    }
  
    $tweeaks += Get-SelectedTweeaks

    if(Get-SelectedTweeaks -ne $null)
    {

        Invoke-RunspaceWithScriptBlock -ArgumentList  $tweeaks -ScriptBlock {

            param($tweeaks)
            
            try{

                $msg = [System.Windows.MessageBox]::Show("Do you want to apply selected tweeak(s) ?", "ITT @emadadel", [System.Windows.MessageBoxButton]::YesNo, [System.Windows.MessageBoxImage]::Question)

                if($msg -eq "Yes")
                {
                    $sync.ProcessRunning = $true

                    $sync.description.Dispatcher.Invoke([Action]{
                        $sync.description.Text = "Applying..."
                    })

                    #Write-Host "Applying tweeak(s) $tweeaks "
                    Start-Process -FilePath "powershell.exe" -ArgumentList "-Command `"$tweeaks`"" -NoNewWindow -Wait
                    Write-Host "The operation was successful."    
                    [System.Windows.MessageBox]::Show("Successfully Completed", "ITT @emadadel4", "OK", "Information")

                    $sync.TweeaksListView.Dispatcher.Invoke([Action]{
                        foreach ($item in $sync.TweeaksListView.Items)
                        {
                            $item.IsChecked = $false
                        }
                    })

                 
                    $sync.description.Dispatcher.Invoke([Action]{
                        $sync.description.Text = "Done..."
                    })

                    Start-Sleep -Seconds 1
                    $sync.ProcessRunning = $False

               

                }
                else 
                {
                    $sync.TweeaksListView.Dispatcher.Invoke([Action]{
                        foreach ($item in $sync.TweeaksListView.Items)
                        {
                            $item.IsChecked = $false
                        }
                    })
                }
            }
            Catch
            {
                Write-Host "Error: $_"
            }
         
        }
    }
    else
    {
        [System.Windows.MessageBox]::Show("Choose at least something from the list", "ITT @emadadel", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Question)
    }
}
function LoadJson {

        # Open file dialog to select JSON file
        $openFileDialog = New-Object -TypeName "Microsoft.Win32.OpenFileDialog"
        $openFileDialog.Filter = "JSON files (*.json)|*.json"
        $openFileDialog.Title = "Open JSON File"
        $dialogResult = $openFileDialog.ShowDialog()


    if ($dialogResult -eq "OK") {

        # Read the JSON file
        $json = Get-Content -Path $openFileDialog.FileName -Raw | ConvertFrom-Json

        # Add items to the ListView
        foreach ($itemData in $json)
        {
            foreach($item in $sync['window'].FindName('list').items)
            {
                if($itemData.Name -eq $item.Content)
                {
                    $item.IsChecked = $itemData.check
                }
            }
        }
    }

    Write-Host "Loaded successfully."

}

function SaveItemsToJson
{
  
  $items = @()

    foreach ($item in $sync['window'].FindName('list').Items)
    {

      if ($item.IsChecked)
      {
            $itemObject = [PSCustomObject]@{
              Name = $item.Content
              check = "true"
          }
            $items += $itemObject
      }
    }

    if ($items -ne $null -and $items.Count -gt 0) 
    {

        # Open save file dialog
        $saveFileDialog = New-Object -TypeName "Microsoft.Win32.SaveFileDialog"
        $saveFileDialog.Filter = "JSON files (*.json)|*.json"
        $saveFileDialog.Title = "Save JSON File"
        $dialogResult = $saveFileDialog.ShowDialog()

        if ($dialogResult -eq "OK") {
            $items | ConvertTo-Json | Out-File -FilePath $saveFileDialog.FileName -Force
            Write-Host "JSON file saved: $($saveFileDialog.FileName)"
        }

    }
    else
    {
        [System.Windows.MessageBox]::Show("You have to Select first", "ITT", [System.Windows.MessageBoxButton]::OK, [System.Windows.MessageBoxImage]::Warning)
    }
}

function Invoke-RunspaceWithScriptBlock {
    param(
        [scriptblock]$ScriptBlock,
        [array]$ArgumentList
    )

       
        $script:powershell = [powershell]::Create()

        # Add Scriptblock and Arguments to runspace
        $script:powershell.AddScript($ScriptBlock)
        $script:powershell.AddArgument($ArgumentList)
        $script:powershell.RunspacePool = $sync.runspace

        $script:handle = $script:powershell.BeginInvoke()

        if ($script:handle.IsCompleted)
        {
            $script:powershell.EndInvoke($script:handle)
            $script:powershell.Dispose()
            $sync.runspace.Dispose()
            $sync.runspace.Close()
            [System.GC]::Collect()
        }
}

function StopAllRunspace {
    
    $script:powershell.Dispose()
    $sync.runspace.Dispose()
    $sync.runspace.Close()
    $script:powershell.Stop()
    
}
#region Theme Functions

    # Function to toggle between dark and light modes
    function Toggle-Theme {

        try {
        if ($sync.isDarkMode -eq "Dark")
        {
            Switch-ToLightMode
            $sync.isDarkMode = -not $sync.isDarkMode


        } else {
            Switch-ToDarkMode
            $sync.isDarkMode = -not $sync.isDarkMode


        }
        } catch {
            Write-Host "Error toggling theme: $_"
        }
    }

    # Function to switch to dark mode
    function Switch-ToDarkMode {
        try {
            $sync['window'].FindName('themeText').Header = "Light Mode"
            $theme = $sync['window'].FindResource("DarkTheme")
            Update-Theme $theme "Dark"
        } catch {
            Write-Host "Error switching to dark mode: $_"
        }
    }

    # Function to switch to light mode
    function Switch-ToLightMode {
        try {
            $sync['window'].FindName('themeText').Header = "Dark Mode"
            $theme = $sync['window'].FindResource("LightTheme")
            Update-Theme $theme "Light"
        } catch {
            Write-Host "Error switching to light mode: $_"
        }
    }

    # Function to update the theme
    function Update-Theme ($theme, $mode) {
        $sync['window'].Resources.MergedDictionaries.Clear()
        $sync['window'].Resources.MergedDictionaries.Add($theme)
        Set-ItemProperty -Path "HKCU:\Software\ITTEmadadel" -Name "Theme" -Value $mode -Force
    }
#endregion
#region Theme Functions
function PlayMusic {

    # RUN MUSIC IN BACKGROUND
    Invoke-RunspaceWithScriptBlock -ScriptBlock {

        Function PlayAudio($url)
        {
            try
            {
                $mediaItem =  $sync.mediaPlayer.newMedia($url)
                $sync.mediaPlayer.currentPlaylist.appendItem($mediaItem)
                $sync.mediaPlayer.controls.play()
            }
            catch
            {

            }
        }

        # Function to shuffle the playlist
        Function ShuffleArray
        {
            param([array]$array)

            $count = $array.Length

            for ($i = 0; $i -lt $count; $i++)
            {
                $randomIndex = Get-Random -Minimum $i -Maximum $count
                $temp = $array[$i]
                $array[$i] = $array[$randomIndex]
                $array[$randomIndex] = $temp
            }
        }

        # Shuffle the playlist
        ShuffleArray -array $sync.configs.OST.Tracks

        # Function to play the entire shuffled playlist
        Function PlayShuffledPlaylist
        {
            foreach ($url in $sync.configs.OST.Tracks)
            {
                PlayAudio $url
                # Wait for the track to finish playing
                while ( $sync.mediaPlayer.playState -eq 3 -or  $sync.mediaPlayer.playState -eq 6)
                {
                    Start-Sleep -Milliseconds 100
                }
            }
        }

        # Play the shuffled playlist indefinitely
        while ($true) 
        {
            PlayShuffledPlaylist
        }
    }
}

function StopMusic {

    $sync.mediaPlayer.controls.stop()
    $sync.mediaPlayer = $null

    $script:powershell.Dispose()
    $sync.runspace.Dispose()
    $sync.runspace.Close()
}

#endregion
function GetQuotes {

    Invoke-RunspaceWithScriptBlock -ScriptBlock {


        # Define the path to your JSON file
        $jsonFilePath = $sync.configs.Quotes

        # Function to shuffle an array
        function Shuffle-Array {
            param (
                [array]$Array
            )
            $count = $Array.Count
            for ($i = $count - 1; $i -ge 0; $i--) {
                $randomIndex = Get-Random -Minimum 0 -Maximum $count
                $temp = $Array[$i]
                $Array[$i] = $Array[$randomIndex]
                $Array[$randomIndex] = $temp
            }
            return $Array
        }

        # Function to get names from the JSON file
        function Get-NamesFromJson {
            $jsonContent =  $jsonFilePath 
            return $jsonContent.Q
        }

        # Get shuffled names
        $shuffledNames = Shuffle-Array -Array (Get-NamesFromJson)

        # Loop forever and print shuffled names
        while ($true) {
            foreach ($name in $shuffledNames) {

                $sync.Quotes.Dispatcher.Invoke([Action]{
                    $sync.Quotes.Text = "`".$name`""
                })

                # Adjust the sleep time as needed
                Start-Sleep -Seconds 15  
            }
        }
    }
}
# Show Custom Msg
function Show-CustomDialog {
    
    param(
        [string]$Message,
        [int]$Width = 300,
        [int]$Height = 200
    )

    Add-Type -AssemblyName PresentationFramework

    # Define theme colors
    $foregroundColor = [Windows.Media.Brushes]::Black
    $backgroundColor = [Windows.Media.Brushes]::White
    $font = New-Object Windows.Media.FontFamily("Consolas")
    $borderColor = [Windows.Media.Brushes]::Black
    $buttonBackgroundColor = [Windows.Media.Brushes]::Black
    $buttonForegroundColor = [Windows.Media.Brushes]::White
    $shadowColor = [Windows.Media.ColorConverter]::ConvertFromString("#AAAAAAAA")

    # Create a custom dialog window
    $dialog = New-Object Windows.Window
    $dialog.Title = "About"
    $dialog.Height = $Height
    $dialog.Width = $Width
    $dialog.Margin = New-Object Windows.Thickness(10)  # Add margin to the entire dialog box
    $dialog.WindowStyle = [Windows.WindowStyle]::None  # Remove title bar and window controls
    $dialog.ResizeMode = [Windows.ResizeMode]::NoResize  # Disable resizing
    $dialog.WindowStartupLocation = [Windows.WindowStartupLocation]::CenterScreen  # Center the window
    $dialog.Foreground = $foregroundColor
    $dialog.Background = $backgroundColor
    $dialog.FontFamily = $font

    # Create a Border for the green edge with rounded corners
    $border = New-Object Windows.Controls.Border
    $border.BorderBrush = $borderColor
    $border.BorderThickness = New-Object Windows.Thickness(1)  # Adjust border thickness as needed
    $border.CornerRadius = New-Object Windows.CornerRadius(0)  # Adjust the radius for rounded corners

    # Create a drop shadow effect
    $dropShadow = New-Object Windows.Media.Effects.DropShadowEffect
    $dropShadow.Color = $shadowColor
    $dropShadow.Direction = 270
    $dropShadow.ShadowDepth = 5
    $dropShadow.BlurRadius = 0

    # Apply drop shadow effect to the border
    $dialog.Effect = $dropShadow

    $dialog.Content = $border

    # Create a grid for layout inside the Border
    $grid = New-Object Windows.Controls.Grid
    $border.Child = $grid

    # Add the following line to show gridlines
    #$grid.ShowGridLines = $true

    # Add the following line to set the background color of the grid
    $grid.Background = [Windows.Media.Brushes]::Transparent
    # Add the following line to make the Grid stretch
    $grid.HorizontalAlignment = [Windows.HorizontalAlignment]::Stretch
    $grid.VerticalAlignment = [Windows.VerticalAlignment]::Stretch

    # Add the following line to make the Border stretch
    $border.HorizontalAlignment = [Windows.HorizontalAlignment]::Stretch
    $border.VerticalAlignment = [Windows.VerticalAlignment]::Stretch


    # Set up Row Definitions
    $row0 = New-Object Windows.Controls.RowDefinition
    $row0.Height = [Windows.GridLength]::Auto

    $row1 = New-Object Windows.Controls.RowDefinition
    $row1.Height = [Windows.GridLength]::new(1, [Windows.GridUnitType]::Star)

    $row2 = New-Object Windows.Controls.RowDefinition
    $row2.Height = [Windows.GridLength]::Auto

    # Add Row Definitions to Grid
    $grid.RowDefinitions.Add($row0)
    $grid.RowDefinitions.Add($row1)
    $grid.RowDefinitions.Add($row2)
        
    # Add StackPanel for horizontal layout with margins
    $stackPanel = New-Object Windows.Controls.StackPanel
    $stackPanel.Margin = New-Object Windows.Thickness(10)  # Add margins around the stack panel
    $stackPanel.Orientation = [Windows.Controls.Orientation]::Horizontal
    $stackPanel.HorizontalAlignment = [Windows.HorizontalAlignment]::Left  # Align to the left
    $stackPanel.VerticalAlignment = [Windows.VerticalAlignment]::Top  # Align to the top

    $grid.Children.Add($stackPanel)
    [Windows.Controls.Grid]::SetRow($stackPanel, 0)  # Set the row to the second row (0-based index)

    $viewbox = New-Object Windows.Controls.Viewbox
    $viewbox.Width = 25
    $viewbox.Height = 25
    

    # Add "Winutil" text
    $IttTextBlock = New-Object Windows.Controls.TextBlock
    $IttTextBlock.Text = "ITT"
    $IttTextBlock.FontSize = 18  # Adjust font size as needed
    $IttTextBlock.Foreground = $foregroundColor
    $IttTextBlock.Margin = New-Object Windows.Thickness(10, 5, 10, 5)  # Add margins around the text block
    $stackPanel.Children.Add($IttTextBlock)

    # Add TextBlock for information with text wrapping and margins
    $messageTextBlock = New-Object Windows.Controls.TextBlock
    $messageTextBlock.Text = $Message
    $messageTextBlock.TextWrapping = [Windows.TextWrapping]::Wrap  # Enable text wrapping
    $messageTextBlock.HorizontalAlignment = [Windows.HorizontalAlignment]::Left
    $messageTextBlock.VerticalAlignment = [Windows.VerticalAlignment]::Top
    $messageTextBlock.Margin = New-Object Windows.Thickness(10)  # Add margins around the text block
    $grid.Children.Add($messageTextBlock)
    [Windows.Controls.Grid]::SetRow($messageTextBlock, 1)  # Set the row to the second row (0-based index)

    # Add OK button
    $okButton = New-Object Windows.Controls.Button
    $okButton.Content = "OK"
    $okButton.Width = 80
    $okButton.Height = 30
    $okButton.HorizontalAlignment = [Windows.HorizontalAlignment]::Center
    $okButton.VerticalAlignment = [Windows.VerticalAlignment]::Bottom
    $okButton.Margin = New-Object Windows.Thickness(0, 0, 0, 10)
    $okButton.Background = $buttonBackgroundColor
    $okButton.Foreground = $buttonForegroundColor
    $okButton.BorderBrush = $borderColor

    $okButton.Add_Click({
        $dialog.Close()
    })
    $grid.Children.Add($okButton)
    [Windows.Controls.Grid]::SetRow($okButton, 2)  # Set the row to the third row (0-based index)

    # Handle Escape key press to close the dialog
    $dialog.Add_KeyDown({
        if ($_.Key -eq 'Escape') {
            $dialog.Close()
        }
    })

    # Set the OK button as the default button (activated on Enter)
    $okButton.IsDefault = $true

    # Show the custom dialog
    $dialog.ShowDialog()
}
function ChangeTap() {
    

    if($sync['window'].FindName('apps').IsSelected)
    {
        $sync['window'].FindName('installBtn').Visibility = "Visible"
        $sync['window'].FindName('applyBtn').Visibility = "Hidden"
    }

    if($sync['window'].FindName('tweeksTab').IsSelected)
    {
        $sync['window'].FindName('applyBtn').Visibility = "Visible"
        $sync['window'].FindName('installBtn').Visibility = "Hidden"
    }
}

#====================================================================================
#endregion End functions
#====================================================================================

$sync.configs.applications = '[
  {
    "Name": "Thorium",
    "Description": "A web browser designed for smooth and secure browsing experiences.",
    "winget": "Alex313031.Thorium",
    "choco": "thorium",
    "category": "Browsers",
    "check": "false"
  },
  {
    "Name": "Firefox",
    "Description": "A widely-used open-source web browser known for its speed, privacy features, and customization options.",
    "winget": "Mozilla.Firefox",
    "choco": "firefox",
    "category": "Browsers",
    "check": "true"
  },
  {
    "Name": "Add block extension [Firefox]",
    "Description": "An extension for Firefox browser that enhances browsing by blocking intrusive ads and pop-ups.",
    "winget": "#",
    "choco": "adblockplusfirefox",
    "category": "Browsers",
    "check": "false"
  },
  {
    "Name": "Microsoft Edge",
    "Description": "Microsoft''s web browser built for fast and secure internet surfing, integrating seamlessly with Windows ecosystem.",
    "winget": "Microsoft.Edge",
    "choco": "microsoft-edge",
    "category": "Browsers",
    "check": "false"
  },
  {
    "Name": "Google Chrome",
    "Description": "A popular web browser known for its speed, simplicity, and vast ecosystem of extensions.",
    "winget": "Google.Chrome",
    "choco": "googlechrome",
    "category": "Browsers",
    "check": "false"
  },
  {
    "Name": "uBlock Origin extension [Chrome]",
    "Description": "A powerful ad-blocking extension for Chrome, providing users with an ad-free browsing experience.",
    "winget": "#",
    "choco": "ublockorigin-chrome",
    "category": "Browsers",
    "check": "false"
  },
  {
    "Name": "Chromium",
    "Description": "An open-source web browser project that serves as the foundation for many browsers, including Google Chrome.",
    "winget": "eloston.ungoogled-chromium",
    "choco": "chromium",
    "category": "Browsers",
    "check": "false"
  },
  {
    "Name": "Brave",
    "Description": "A privacy-focused web browser that blocks ads and trackers, offering faster and safer browsing experiences.",
    "winget": "Brave.Brave",
    "choco": "brave",
    "category": "Browsers",
    "check": "false"
  },
  {
    "Name": "Tor Browser",
    "Description": "A web browser that prioritizes user privacy by routing internet traffic through a global network of servers, enabling anonymous browsing.",
    "winget": "TorProject.TorBrowser",
    "choco": "tor-browser",
    "category": "Browsers",
    "check": "false"
  },
  {
    "Name": "Opera",
    "Description": "The Opera web browser makes the Web fast and fun, giving you a better web browser experience on any computer.",
    "winget": "#",
    "choco": "opera",
    "category": "Browsers",
    "check": "false"
  },
  {
    "Name": "Internet Download Manager",
    "Description": "A popular download manager tool that accelerates downloads and allows users to organize and schedule downloads efficiently.",
    "winget": "Tonec.InternetDownloadManager",
    "choco": "internet-download-manager",
    "category": "Browsers",
    "check": "true"
  },
  {
    "Name": "K-Lite Mega Codec Pack",
    "Description": "Comprehensive collection of audio and video codecs, filters, and tools, enabling playback of various media formats.",
    "winget": "CodecGuide.K-LiteCodecPack.Mega",
    "choco": "k-litecodecpackfull",
    "category": "Media",
    "check": "true"
  },
  {
    "Name": "PotPlayer",
    "Description": "A multimedia player with a sleek interface and advanced features, supporting a wide range of audio and video formats.",
    "winget": "Daum.PotPlayer",
    "choco": "potplayer",
    "category": "Media",
    "check": "false"
  },
  {
    "Name": "VLC",
    "Description": "A versatile media player capable of playing almost any multimedia file format, with support for various streaming protocols.",
    "winget": "VideoLAN.VLC",
    "choco": "vlc.install",
    "category": "Media",
    "check": "false"
  },
  {
    "Name": "Kodi",
    "Description": "A powerful open-source media center software that allows users to organize and stream their media collections.",
    "winget": "#",
    "choco": "kodi",
    "category": "Media",
    "check": "false"
  },
  {
    "Name": "Jellyfin",
    "Description": "An open-source media server software that enables users to stream their media libraries across devices, providing a self-hosted alternative to commercial services.",
    "winget": "#",
    "choco": "jellyfin",
    "category": "Media",
    "check": "false"
  },
  {
    "Name": "Winamp",
    "Description": "A classic media player known for its customizable interface and extensive plugin support, providing a nostalgic music playback experience.",
    "winget": "#",
    "choco": "winamp",
    "category": "Media",
    "check": "false"
  },
  {
    "Name": "Aimp",
    "Description": "A lightweight and feature-rich audio player with support for various audio formats and customizable interface themes.",
    "winget": "#",
    "choco": "aimp",
    "category": "Media",
    "check": "false"
  },
  {
    "Name": "Spotify",
    "Description": "Spotify is a new way to listen to music.",
    "winget": "#",
    "choco": "spotify",
    "category": "Media",
    "check": "false"
  },
  {
    "Name": "FastStone Image Viewer",
    "Description": "FastStone Image Viewer is a fast, stable, user-friendly image browser, converter and editor ",
    "winget": "#",
    "choco": "fsviewer",
    "category": "Imaging",
    "check": "false"
  },
  {
    "Name": "OpenOffice",
    "Description": "An open-source office productivity suite offering word processing, spreadsheet, presentation, and other office tools, compatible with Microsoft Office formats.",
    "winget": "Apache.OpenOffice",
    "choco": "openoffice",
    "category": "Documents",
    "check": "false"
  },
  {
    "Name": "FoxitReader",
    "Description": "A lightweight and feature-rich PDF reader with annotation, form filling, and document signing capabilities.",
    "winget": "Foxit.FoxitReader",
    "choco": "foxitreader",
    "category": "Documents",
    "check": "false"
  },
  {
    "Name": "LibreOffice",
    "Description": "A powerful open-source office suite providing word processing, spreadsheet, presentation, and other office tools, compatible with Microsoft Office formats.",
    "winget": "TheDocumentFoundation.LibreOffice",
    "choco": "libreoffice-fresh",
    "category": "Documents",
    "check": "false"
  },
  {
    "Name": "SumatraPDF",
    "Description": "A lightweight and fast PDF reader with minimalistic design and focus on simplicity and speed.",
    "winget": "SumatraPDF.SumatraPDF",
    "choco": "sumatrapdf.install",
    "category": "Documents",
    "check": "false"
  },
  {
    "Name": "WinRAR",
    "Description": "A popular file compression and archiving utility that supports various archive formats and offers advanced features such as encryption and self-extracting archives.",
    "winget": "RARLab.WinRAR",
    "choco": "winrar",
    "category": "Compression",
    "check": "false"
  },
  {
    "Name": "7-Zip",
    "Description": "An open-source file archiver with a high compression ratio, supporting various archive formats and providing a powerful command-line interface.",
    "winget": "7zip.7zip",
    "choco": "7zip",
    "category": "Compression",
    "check": "false"
  },
  {
    "Name": "PeaZip",
    "Description": " PeaZip is a free cross-platform file archiver.",
    "winget": "7zip.7zip",
    "choco": "peazip",
    "category": "Compression",
    "check": "false"
  },
  {
    "Name": "QQPlayer",
    "Description": "A multimedia player with support for a wide range of audio and video formats, featuring built-in codecs and additional functionalities such as screen capturing and video conversion.",
    "winget": "Tencent.QQPlayer",
    "choco": "Tencent.QQPlayer",
    "category": "Media",
    "check": "false"
  },
  {
    "Name": "Telegram Desktop",
    "Description": "A cross-platform messaging app with a focus on speed and security, offering end-to-end encryption and a wide range of features such as group chats, file sharing, and stickers.",
    "winget": "Telegram.TelegramDesktop",
    "choco": "telegram",
    "category": "Communication",
    "check": "false"
  },
  {
    "Name": "Signal",
    "Description": "Fast, simple, secure. Privacy that fits in your pocket.",
    "winget": "#",
    "choco": "signal",
    "category": "Communication",
    "check": "false"
  },
  {
    "Name": "Meta Messenger",
    "Description": "A messaging app that allows users to connect with friends and family through text messages, voice calls, and video calls, offering various multimedia sharing features.",
    "winget": "WhatsApp.WhatsApp",
    "choco": "messenger",
    "category": "Communication",
    "check": "false"
  },
  {
    "Name": "Skype",
    "Description": "A communication platform that enables users to make voice and video calls, send instant messages, and share files, supporting both individual and group conversations.",
    "winget": "Microsoft.Skype",
    "choco": "skype",
    "category": "Communication",
    "check": "false"
  },
  {
    "Name": "Zoom",
    "Description": "A video conferencing app that facilitates online meetings, webinars, and virtual events, allowing participants to interact through video, audio, and chat.",
    "winget": " Zoom.Zoom",
    "choco": "zoom",
    "category": "Communication",
    "check": "false"
  },
  {
    "Name": "Microsoft Teams",
    "Description": "A collaboration platform that combines workplace chat, video meetings, file storage, and application integration, enhancing teamwork and productivity within organizations.",
    "winget": "Microsoft.Teams",
    "choco": "microsoft-teams.install",
    "category": "Communication",
    "check": "false"
  },
  {
    "Name": "Discord",
    "Description": "A VoIP application and digital distribution platform designed for creating communities and connecting gamers, providing text, voice, and video communication features.",
    "winget": "Discord.Discord",
    "choco": "discord",
    "category": "Communication",
    "check": "false"
  },
  {
    "Name": "TeamViewer",
    "Description": "A remote access and support software that enables users to remotely control computers, transfer files, and collaborate online, facilitating remote work and IT support.",
    "winget": "TeamViewer.TeamViewer",
    "choco": "teamviewer",
    "category": "File Sharing",
    "check": "false"
  },
  {
    "Name": "GIMP",
    "Description": "A free and open-source raster graphics editor used for image retouching and editing, drawing and painting, and converting between different image formats.",
    "winget": "GIMP.GIMP",
    "choco": "gimp",
    "category": "Imaging",
    "check": "false"
  },
  {
    "Name": "DirectX",
    "Description": "DirectX is a collection of APIs for handling tasks related to games and videos.",
    "winget": "#",
    "choco": "directx",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Microsoft Visual C++ Runtime - all versions",
    "Description": "Microsoft Visual C++ Redistributable installs run-time components of Visual C++ libraries. These components are required to run C++ applications that are developed using Visual Studio and link dynamically to Visual C++ libraries.",
    "winget": "#",
    "choco": "vcredist-all",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Microsoft Visual C++ 2005 (x86) Redistributable",
    "Description": "A set of runtime components required to run applications developed with Microsoft Visual C++ 2005, providing libraries, DLLs, and other resources.",
    "winget": "Microsoft.VCRedist.2005.x86",
    "choco": "vcredist2005",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Microsoft Visual C++ 2005 (x64) Redistributable",
    "Description": "A set of runtime components required to run 64-bit applications developed with Microsoft Visual C++ 2005, providing libraries, DLLs, and other resources.",
    "winget": "Microsoft.VCRedist.2005.x64",
    "choco": "vcredist2005",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Microsoft Visual C++ 2008 (x86) Redistributable",
    "Description": "A set of runtime components required to run applications developed with Microsoft Visual C++ 2008, providing libraries, DLLs, and other resources.",
    "winget": "Microsoft.VCRedist.2008.x86",
    "choco": "vcredist2008",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Microsoft Visual C++ 2008 (x64) Redistributable",
    "Description": "A set of runtime components required to run 64-bit applications developed with Microsoft Visual C++ 2008, providing libraries, DLLs, and other resources.",
    "winget": "Microsoft.VCRedist.2008.x64",
    "choco": "vcredist2008",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Microsoft Visual C++ 2010 (x86) Redistributable",
    "Description": "A set of runtime components required to run applications developed with Microsoft Visual C++ 2010, providing libraries, DLLs, and other resources.",
    "winget": "Microsoft.VCRedist.2010.x86",
    "choco": "vcredist2010",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Microsoft Visual C++ 2010 (x64) Redistributable",
    "Description": "A set of runtime components required to run 64-bit applications developed with Microsoft Visual C++ 2010, providing libraries, DLLs, and other resources.",
    "winget": "Microsoft.VCRedist.2010.x64",
    "choco": "vcredist2010",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Microsoft Visual C++ 2012 (x86) Redistributable",
    "Description": "A set of runtime components required to run applications developed with Microsoft Visual C++ 2012, providing libraries, DLLs, and other resources.",
    "winget": "Microsoft.VCRedist.2012.x86",
    "choco": "vcredist2012",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Microsoft Visual C++ 2012 (x64) Redistributable",
    "Description": "A set of runtime components required to run 64-bit applications developed with Microsoft Visual C++ 2012, providing libraries, DLLs, and other resources.",
    "winget": "Microsoft.VCRedist.2012.x64",
    "choco": "vcredist2012",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Microsoft Visual C++ 2013 (x86) Redistributable",
    "Description": "A set of runtime components required to run applications developed with Microsoft Visual C++ 2013, providing libraries, DLLs, and other resources.",
    "winget": "Microsoft.VCRedist.2013.x86",
    "choco": "vcredist2013",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Microsoft Visual C++ 2013 (x64) Redistributable",
    "Description": "A set of runtime components required to run 64-bit applications developed with Microsoft Visual C++ 2013, providing libraries, DLLs, and other resources.",
    "winget": "Microsoft.VCRedist.2013.x64",
    "choco": "vcredist2013",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Microsoft Visual C++ 2015-2022 (x64) Redistributable",
    "Description": "A set of runtime components required to run 64-bit applications developed with Microsoft Visual C++ 2015-2022, providing libraries, DLLs, and other resources.",
    "winget": "Microsoft.VCRedist.2015+.x64",
    "choco": "vcredist2015",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Microsoft Visual C++ 2015-2022  (x86) Redistributable",
    "Description": "A set of runtime components required to run applications developed with Microsoft Visual C++ 2015-2022, providing libraries, DLLs, and other resources.",
    "winget": "Microsoft.VCRedist.2015+.x86",
    "choco": "vcredist2015",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "NET Framework All Versions",
    "Description": "A comprehensive and consistent programming model for building applications that have visually stunning user experiences, seamless and secure communication, and the ability to model a range of business processes.",
    "winget": "#",
    "choco": "dotnet-all",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "AMD Ryzen Chipset Drivers",
    "Description": "Supports: AMD Ryzen Threadripper PRO Processor, AMD Ryzen 8000/7040/7000 Series Desktop & Mobile Processors, AMD Ryzen 5000/3rd Gen/2nd Gen Desktop & Threadripper Processors, AMD Ryzen Desktop Processor with Radeon Graphics & Mobile Processor with Radeon Graphics, 7th-Gen AMD A-Series Processors, AMD X670E/X670/B650E/B650/B350/A320/X370/X399/B450/X470/X570/B550/A520/A620/TRX40/TRX50/WRX80/WRX90 Chipsets",
    "winget": "#",
    "choco": "amd-ryzen-chipset",
    "category": "Gaming",
    "check": "true"
  },
  {
    "Name": "NVidia Display Driver",
    "Description": "The software component that allows the operating system and installed software to communicate with and control the NVIDIA graphics processing unit (GPU).",
    "winget": "#",
    "choco": "nvidia-display-driver",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "NVIDIA GeForce",
    "Description": "A cloud-based gaming service provided by NVIDIA that allows users to play video games on supported devices via a remote gaming PC hosted on NVIDIA''s servers.",
    "winget": "Nvidia.GeForceNow",
    "choco": "nvidia-geforce-now",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Msi Afterburner",
    "Description": "MSI Afterburner is the ultimate graphics card utility, co-developed by MSI and RivaTuner teams.",
    "winget": "#",
    "choco": "msiafterburner",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "NVIDIA PhysX",
    "Description": "A physics processing unit (PPU) software development kit (SDK) offered by NVIDIA for real-time physics simulations in video games.",
    "winget": "Nvidia.PhysX",
    "choco": "physx.legacy",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Steam",
    "Description": "A digital distribution platform developed by Valve Corporation for purchasing and playing video games.",
    "winget": "Valve.Steam",
    "choco": "steam",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Epic Games Launcher ",
    "Description": "Epic Games Launcher.",
    "winget": "#",
    "choco": "epicgameslauncher",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Ubisoft Connect",
    "Description": "A digital distribution, digital rights management, multiplayer, and communications service developed by Ubisoft, providing access to Ubisoft''s games, rewards, and social features.",
    "winget": "Ubisoft.Connect",
    "choco": "ubisoft-connect",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Origin",
    "Description":" Game store launcher",
    "winget": "#",
    "choco": "origin",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Rockstar Games Launcher",
    "Description": "Download and play the latest Rockstar Games PC titles",
    "winget": "rockstar-launcher",
    "choco": "steam",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "GameSave Manager",
    "Description": "A utility tool that allows users to backup, restore, and transfer their game saves between different gaming platforms and directories.",
    "winget": "InsaneMatt.GameSaveManager",
    "choco": "gamesavemanager",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "StreamlabsOBS",
    "Description": "A free and open-source streaming software built on top of OBS Studio with additional features tailored for streamers, such as built-in alerts, overlays, and chat integration.",
    "winget": "Streamlabs.StreamlabsOBS",
    "choco": "streamlabs-obs",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "OBS Studio",
    "Description": "A free and open-source software for video recording and live streaming. It offers high performance real-time video/audio capturing and mixing.",
    "winget": " OBSProject.OBSStudio",
    "choco": "obs-studio.install",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Logitech Gaming Software",
    "Description": "Logitech Gaming Software lets you customize Logitech G gaming mice, keyboards, headsets and select wheels.",
    "winget": "#",
    "choco": "logitechgaming",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Lively Wallpaper",
    "Description": "A software that allows users to set animated and interactive wallpapers on their Windows desktop, providing various customization options.",
    "winget": " #",
    "choco": "lively",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Playnite",
    "Description": "Open source video game library manager and launcher with support for 3rd party libraries like Steam, GOG, Origin, Battle.net and Uplay.",
    "winget": " #",
    "choco": "playnite",
    "category": "Gaming",
    "check": "false"
  },
  {
    "Name": "Driver Easy",
    "Description": "A driver update tool that automatically detects, downloads, and installs device drivers for the user''s computer hardware.",
    "winget": "Easeware.DriverEasy",
    "choco": "drivereasyfree",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "Snappy Driver Installer",
    "Description": "A free and open-source tool for updating and installing device drivers on Windows, offering offline driver updates and wide hardware support.",
    "winget": "samlab-ws.SnappyDriverInstaller",
    "choco": "snappy-driver-installer",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "Driver booster",
    "Description": "Scans and identifies outdated drivers automatically, and downloads and installs the right update for you with just ONE click.",
    "winget": "#",
    "choco": "driverbooster",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "Driver Genius",
    "Description": "Professional driver management tool and hardware diagnostics.",
    "winget": "#",
    "choco": "drivergenius",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "Display Driver Uninstaller",
    "Description": "Utility to completely remove system drivers",
    "winget": "#",
    "choco": "ddu",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "Driver Store Explorer",
    "Description": " Windows driver store utility.",
    "winget": "#",
    "choco": "rapr",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "1Password",
    "Description": "A password manager that securely stores login credentials, credit card information, and other sensitive data in an encrypted vault, accessible with a single master password.",
    "winget": "AgileBits.1Password",
    "choco": "1password",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "MiniTool Partition Wizard",
    "Description": "A disk partition management tool that allows users to create, resize, move, merge, split, copy, and convert partitions on their hard drives or storage devices.",
    "winget": "MiniTool.PartitionWizard.Free 12.8",
    "choco": "partitionwizard",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "AOMEI Partition Assistant Standard",
    "Description": "AOMEI Partition Assistant Standard allows you to realize disk upgrade/replacement, partition style conversion, OS migration and other disk managements without any difficulties.",
    "winget": "#",
    "choco": "partition-assistant-standard",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "AOMEI Backupper",
    "Description": "A backup and recovery software that enables users to create system backups, disk backups, partition backups, and file backups to protect data against system failures and data loss.",
    "winget": "AOMEI.Backupper.Standard",
    "choco": "backupper-standard",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "Recuva recover",
    "Description": "A data recovery software that helps users retrieve accidentally deleted files, including photos, documents, videos, and more, from various storage devices such as hard drives, USB drives, and memory cards.",
    "winget": "#",
    "choco": "recuva",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "CCleaner",
    "Description": "A system optimization, privacy, and cleaning tool that helps users remove unused files, clean up temporary files, and optimize their Windows PCs for better performance.",
    "winget": "Piriform.CCleaner",
    "choco": "ccleaner",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "BCUninstaller",
    "Description": "A powerful uninstaller tool for Windows that allows users to remove unwanted programs, plugins, and Windows Store apps, along with leftover files and registry entries.",
    "winget": "Klocman.BulkCrapUninstaller",
    "choco": "bulk-crap-uninstaller",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "HWiNFO",
    "Description": "A hardware information and diagnostic tool that provides detailed information about the hardware components of a computer system, including sensors, temperature, voltage, and more.",
    "winget": "REALiX.HWiNFO",
    "choco": "hwinfo.install",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "Speccy",
    "Description": "A system information tool that provides detailed information about the hardware and operating system of a computer, including CPU, RAM, motherboard, graphics card, and storage devices.",
    "winget": "Piriform.Speccy",
    "choco": "speccy",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "FurMark",
    "Description": "A graphics card stress testing and benchmarking utility that helps users test the stability, cooling, and performance of their GPU by rendering a highly intensive 3D graphics scene.",
    "winget": "Geeks3D.FurMark",
    "choco": "furmark",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "Hard Disk Sentinel",
    "Description": "A hard disk monitoring and analysis software that helps users monitor the health, performance, and temperature of their hard drives, SSDs, and other storage devices.",
    "winget": "#",
    "choco": "hdsentinel",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "CPUID CPU-Z",
    "Description": "A system monitoring utility that provides detailed information about the CPU, motherboard, memory, and other hardware components of a computer system.",
    "winget": "CPUID.CPU-Z",
    "choco": "cpu-z",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "Mem Reduct",
    "Description": "Lightweight real-time memory management application to monitor and clean system memory on your computer.",
    "winget": "#",
    "choco": "memreduct",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "HandBrake",
    "Description": "A free and open-source video transcoder tool that converts video files from one format to another, supporting a wide range of input and output formats.",
    "winget": "HandBrake.HandBrake",
    "choco": "handbrake.install",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "Rufus",
    "Description": "A utility tool for creating bootable USB drives from ISO images, helping users to install or run operating systems, such as Windows, Linux, or other utilities.",
    "winget": "Rufus.Rufus",
    "choco": "rufus",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "ImgBurn",
    "Description": "Lightweight CD / DVD burning application ",
    "winget": "#",
    "choco": "imgburn",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Virtual CloneDrive",
    "Description": "A free software that allows users to mount disc images as virtual drives, enabling them to access the content of ISO, BIN, and CCD files without the need for physical discs.",
    "winget": "#",
    "choco": "virtualclonedrive",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "Utilso",
    "Description": "A powerful ISO image management tool that enables users to create, edit, extract, and burn ISO files, providing a comprehensive solution for managing disk image files.",
    "winget": "SerhiiSlieptsov.Utilso",
    "choco": "ultraiso",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "Ventoy",
    "Description": "An open-source tool for creating bootable USB drives with multiple ISO files, allowing users to boot various operating systems or utilities directly from a single USB drive.",
    "winget": "Ventoy.Ventoy",
    "choco": "ventoy",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "iVentoy",
    "Description": "With iVentoy you can boot and install OS on multiple machines at the same time through the network.",
    "winget": "#",
    "choco": "iventoy",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "AutoHotkey",
    "Description": "A scripting language for automating repetitive tasks and creating macros on Windows, allowing users to customize keyboard shortcuts, remap keys, and automate mouse actions.",
    "winget": "AutoHotkey.AutoHotkey",
    "choco": "autohotkey",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "Rainmeter",
    "Description": "A customizable desktop customization tool that displays customizable skins, widgets, and applets on the Windows desktop, providing users with real-time system monitoring and information.",
    "winget": "#",
    "choco": "rainmeter",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "FxSound",
    "Description": "An audio enhancer software that improves the sound quality of music, videos, and games on Windows PCs by providing advanced audio processing and customization options.",
    "winget": "FxSoundLLC.FxSound",
    "choco": "fxsound",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "HiSuite",
    "Description": "A management tool for Huawei smartphones and tablets that allows users to manage, backup, and transfer data between their devices and Windows PCs, including contacts, messages, and multimedia files.",
    "winget": "Huawei.HiSuite",
    "choco": "Huawei.HiSuite",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "Vysor",
    "Description": "A screen mirroring and remote control software that enables users to view and control Android devices from Windows PCs, allowing for easy screen sharing, app testing, and troubleshooting.",
    "winget": "#",
    "choco": "vysor",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "Unifiedremote",
    "Description": "A remote control app that turns smartphones into universal remote controls for Windows, macOS, and Linux computers, allowing users to control media playback, presentations, and more.",
    "winget": "unifiedremote",
    "choco": "unifiedremote",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "AnyDesk",
    "Description": "A remote desktop software that allows users to access and control Windows, macOS, Linux, Android, and iOS devices from anywhere, providing secure and reliable remote access.",
    "winget": "AnyDeskSoftwareGmbH.AnyDesk",
    "choco": "anydesk.install",
    "category": "File Sharing",
    "check": "false"
  },
  {
    "Name": "Airdroid",
    "Description": "AirDroid is a free and fast Android device manager app that allows you to access Android phone/tablet from computer remotely and securely. Manage SMS, files, photos and videos, WhatsApp, Line, WeChat and more on computer.",
    "winget": "#",
    "choco": "airdroid",
    "category": "File Sharing",
    "check": "false"
  },
  {
    "Name": "UltraViewer",
    "Description": "Remote control to support your clients / partners from everywhere.",
    "winget": "#",
    "choco": "ultraviewer",
    "category": "File Sharing",
    "check": "false"
  },
  {
    "Name": "Wireless Network Watcher Portable",
    "Description": "Wireless Network Watcher is a small utility that scans your wireless network and displays the list of all computers and devices that are currently connected to your network.",
    "winget": "#",
    "choco": "wnetwatcher.portable",
    "category": "Utilities",
    "check": "false"
  },
  {
    "Name": "qBittorrent",
    "Description": "A free and open-source BitTorrent client for downloading and uploading files via the BitTorrent protocol, providing users with a lightweight and feature-rich torrenting experience.",
    "winget": "qBittorrent.qBittorrent",
    "choco": "qbittorrent",
    "category": "File Sharing",
    "check": "false"
  },
  {
    "Name": "Google Earth Pro",
    "Description": "Google Earth Pro on desktop is free for users with advanced feature needs. Import and export GIS data, and go back in time with historical imagery.",
    "winget": "#",
    "choco": "googleearthpro",
    "category": "Imaging",
    "check": "false"
  },
  {
    "Name": "XAMPP",
    "Description": "XAMPP is a free and open-source cross-platform web server solution stack package developed by Apache Friends, consisting mainly of the Apache HTTP Server, MariaDB database, and interpreters for scripts written in the PHP and Perl programming languages.",
    "winget": "XAMPP 8.2",
    "choco": "xampp-81",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Visual Studio Professional 2022",
    "Description": "Visual Studio Professional 2022 is an integrated development environment (IDE) from Microsoft. It is used to develop computer programs, websites, web apps, web services, and mobile apps.",
    "winget": "Microsoft.VisualStudio.2022.Professional",
    "choco": "visualstudio2022professional",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Visual Studio Community 2022",
    "Description": "Visual Studio Community 2022 is a free, fully-featured, and extensible IDE for individual developers, open source projects, academic research, education, and small professional teams.",
    "winget": "Microsoft.VisualStudio.2022.Community",
    "choco": "visualstudio2022community",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Godot game engine",
    "Description": "Godot is a feature-packed, cross-platform game engine for creating 2D and 3D games. It provides a comprehensive set of tools and features to develop games efficiently and quickly.",
    "winget": "#",
    "choco": "godot",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Unity Hub",
    "Description": "Unity is a cross-platform game creation system developed by Unity Technologies and used to develop video games for PC, consoles, mobile",
    "winget": "#",
    "choco": "unity-hub",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Unity 3D",
    "Description": "Unity is a cross-platform game creation system developed by Unity Technologies and used to develop video games for PC, consoles, mobile",
    "winget": "#",
    "choco": "unity",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Blender",
    "Description": "Blender is a free and open-source professional-grade 3D computer graphics and video compositing program.",
    "winget": "#",
    "choco": "blender",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Visual Studio Code",
    "Description": "Visual Studio Code is a free source-code editor developed by Microsoft for Windows, Linux, and macOS. It includes support for debugging, embedded Git control, syntax highlighting, intelligent code completion, snippets, and code refactoring.",
    "winget": "Microsoft.VisualStudioCode",
    "choco": "vscode",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Sublime Text 4",
    "Description": "Sublime Text 4 - The sophisticated text editor for code, markup and prose. ",
    "winget": "#",
    "choco": "sublimetext4",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Atom",
    "Description": "Atom is a text editor that''s modern, approachable, yet hackable to the core—a tool you can customize to do anything but also use productively without ever touching a config file.",
    "winget": "#",
    "choco": "atom",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "InnoSetup",
    "Description": "Inno Setup is a free installer for Windows programs. First introduced in 1997, Inno Setup today rivals and even surpasses many commercial installers in feature set and stability.",
    "winget": "#",
    "choco": "innosetup",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "PyCharm Community Edition",
    "Description": "PyCharm Community Edition is a free and open-source IDE for Python development. It provides smart code completion, code inspections, on-the-fly error highlighting, and quick-fixes.",
    "winget": "JetBrains.PyCharm.Community",
    "choco": "pycharm-community",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "PyCharm Professional Edition",
    "Description": "PyCharm Professional Edition is a powerful IDE for professional Python development. It includes advanced features such as database tools, web development support, and scientific tools integration.",
    "winget": "JetBrains.PyCharm.Professional",
    "choco": "pycharm",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Jetbrains Rider",
    "Description": "Rider is a cross-platform .NET IDE developed by JetBrains. It supports C#, VB.NET, F#, ASP.NET, JavaScript, TypeScript, HTML, CSS, and SQL languages and frameworks.",
    "winget": "JetBrains.Rider",
    "choco": "jetbrains-rider",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Node.js LTS",
    "Description": "Node.js is a JavaScript runtime built on Chrome''s V8 JavaScript engine. LTS (Long Term Support) releases are supported for an extended period and provide stability for production environments.",
    "winget": "OpenJS.NodeJS",
    "choco": "nodejs-lts",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Electrum-LTS",
    "Description": "Electrum is a lightweight Bitcoin wallet focused on speed and simplicity, with support for hardware wallets and multisig functionality. LTS (Long Term Support) releases provide stability and security updates for an extended period.",
    "winget": "#",
    "choco": "electronim",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Hugo",
    "Description": "Hugo is one of the most popular open-source static site generators. With its amazing speed and flexibility, Hugo makes building websites f... Keep Reading ",
    "winget": "#",
    "choco": "hugo",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Notepad++",
    "Description": "Notepad++ is a free source code editor and Notepad replacement that supports several languages. It offers syntax highlighting, code folding, auto-completion, and other features for efficient code editing.",
    "winget": "Notepad++.Notepad++",
    "choco": "notepadplusplus",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Windows Terminal",
    "Description": "Windows Terminal is a modern terminal application for users of command-line tools and shells like Command Prompt, PowerShell, and Windows Subsystem for Linux (WSL). It provides multiple tabs, custom themes, and GPU-accelerated text rendering.",
    "winget": "Microsoft.WindowsTerminal",
    "choco": "microsoft-windows-terminal",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Powershell core",
    "Description": "PowerShell Core is a cross-platform (Windows, Linux, and macOS) automation and configuration tool/framework that works well with your existing tools and is optimized for dealing with structured data (e.g., JSON, CSV, XML, etc.), REST APIs, and object models.",
    "winget": "powershell-core",
    "choco": "powershell-core",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "x64dbg Portable",
    "Description": "An open-source x64/x32 debugger for windows.",
    "winget": "#",
    "choco": "x64dbg.portable",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "dnSpy",
    "Description": "dnSpy is a tool to reverse engineer .NET assemblies. It includes a decompiler, a debugger and an assembly editor (and more) and can be easily extended by writing your own extension. It uses dnlib to read and write assemblies so it can handle obfuscated assemblies (eg. malware) without crashing.",
    "winget": "#",
    "choco": "dnspy",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Cheat Engine",
    "Description": "Cheat Engine is an open source tool designed to help you modify single player games.",
    "winget": "#",
    "choco": "cheatengine",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Python",
    "Description": "Python is a popular high-level programming language known for its simplicity and versatility. It is used in various fields such as web development, data science, machine learning, and automation.",
    "winget": "Python.Python.3.9",
    "choco": "python",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Git",
    "Description": "Git is a free and open-source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.",
    "winget": "Git.Git",
    "choco": "git",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "GitHub Desktop",
    "Description": "GitHub Desktop is a seamless way to contribute to projects on GitHub and GitHub Enterprise. It provides an intuitive interface for managing repositories, branching, committing, and merging code changes.",
    "winget": "GitHub.GitHubDesktop",
    "choco": "github-desktop",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Docker Desktop",
    "Description": "Docker Desktop is an easy-to-install application for Windows and macOS that enables developers to build, share, and run containerized applications and microservices locally.",
    "winget": "Docker.DockerDesktop",
    "choco": "docker-desktop",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Docker Compose",
    "Description": "Docker Compose is a tool for defining and running multi-container Docker applications. It allows you to use a YAML file to configure your application''s services, networks, and volumes.",
    "winget": "#",
    "choco": "docker-compose",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "PowerToys",
    "Description": "PowerToys is a set of utilities for power users to tune and streamline their Windows experience for greater productivity. It includes tools like FancyZones for window management, PowerRename for batch renaming files, and more.",
    "winget": "Microsoft.PowerToys",
    "choco": "powertoys",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Notion",
    "Description": "The all-in-one workspace for your notes, tasks, wikis, and databases.",
    "winget": "#",
    "choco": "notion",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "FL Studio",
    "Description": "FL Studio is a digital audio workstation (DAW) developed by Image-Line. It allows you to compose, arrange, record, edit, mix, and master professional-quality music.",
    "winget": "ImageLine.FLStudio",
    "choco": "ImageLine.FLStudio",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Android Debug Bridge",
    "Description": "Android Debug Bridge (ADB) is a command-line tool that allows you to communicate with an Android device. It is used for various debugging tasks such as installing and debugging apps.",
    "winget": "ImageLine.FLStudio",
    "choco": "adb",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Universal ADB Drivers",
    "Description": "Universal ADB Drivers are drivers that provide compatibility with a wide range of Android devices for debugging purposes. They allow you to connect your Android device to a computer and use ADB commands.",
    "winget": "ImageLine.FLStudio",
    "choco": "universal-adb-drivers",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Scrcpy",
    "Description": "Scrcpy is a free and open-source tool that allows you to display and control your Android device from a computer. It provides high-performance screen mirroring and supports various input methods.",
    "winget": "#",
    "choco": "scrcpy",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "VirtualBox",
    "Description": "VirtualBox is a cross-platform virtualization application. It installs on existing Intel or AMD-based computers, whether they are running Windows, Mac, Linux or Solaris operating systems. It extends the capabilities of your existing computer so that it can run multiple operating systems (inside multiple virtual machines) at the same time.",
    "winget": "#",
    "choco": "virtualbox",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "UltraISO",
    "Description": "UltraISO is an ISO CD/DVD image file creating/editing/converting tool and a bootable CD/DVD maker , it can directly edit the CD/DVD image file and extract files and folders from it, as well as directly make ISO files from your CD/DVD-ROM or hard disk. At the same time, you can maintain the ISO bootable information, thus creating your own bootable CD/DVDs.",
    "winget": "#",
    "choco": "ultraiso",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Vmware Workstation",
    "Description": "VMware Workstation Pro enables technical professionals to develop, test, demonstrate, and deploy software by running multiple x86-based Windows, Linux, and other operating systems simultaneously on the same PC.",
    "winget": "#",
    "choco": "vmwareworkstation",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "oh-my-posh",
    "Description": " Oh my Posh is a custom prompt engine for any shell that has the ability to adjust the prompt string with a function or variable.",
    "winget": "#",
    "choco": "oh-my-posh",
    "category": "Developer",
    "check": "false"
  },
  {
    "Name": "Malwarebytes",
    "Description": "Multiple layers of malware-crushing tech, including virus protection. Thorough malware and spyware removal. Specialized ransomware protection.",
    "winget": "#",
    "choco": "malwarebytes",
    "category": "Security",
    "check": "false"
  },
  {
    "Name": "Kaspersky Virus Removal Tool",
    "Description": "Designed to remove different types of infections from an infected PC.",
    "winget": "#",
    "choco": "kvrt",
    "category": "Security",
    "check": "false"
  },
  {
    "Name": "Kaspersky Anti-Virus",
    "Description": "Antivirus protection from a range of IT threats and provides the basic tools needed to keep your PC secure.",
    "winget": "#",
    "choco": "kav",
    "category": "Security",
    "check": "false"
  },
  {
    "Name": "Avast Free Antivirus",
    "Description": "Avast Free Antivirus.",
    "winget": "#",
    "choco": "avastfreeantivirus",
    "category": "Security",
    "check": "false"
  }
]
' | ConvertFrom-Json
$sync.configs.OST = '{
    "Tracks": [

        "https://epsilon.vgmsite.com/soundtracks/far-cry-3/iqgdbfrhtw/17.%20Further%20%28feat.%20Serena%20McKinney%29.mp3",
        "https://dl.vgmdownloads.com/soundtracks/hollow-knight-original-soundtrack/qqrmmaqyqg/26.%20Hollow%20Knight.mp3",
        "https://dl.vgmdownloads.com/soundtracks/assassin-s-creed-unity-vol.-1/hxqrvcoyfj/01.%20Unity.mp3",
        "https://dl.vgmdownloads.com/soundtracks/assassin-s-creed-3/jgevpclfcr/01.%20Assassin%27s%20Creed%20III%20Main%20Theme.mp3",
        "https://dl.vgmdownloads.com/soundtracks/assassins-creed-mirage-original-game-soundtrack-2023/axtwruyduh/01.%20Mirage%20Theme.mp3",
        "https://vgmsite.com/soundtracks/assassins-creed-ezios-family-m-me-remix-2022/qdxeshajdz/01.%20Ezio%27s%20Family%20%28M%C3%B8me%20Remix%29.mp3",
        "https://epsilon.vgmsite.com/soundtracks/assassin-s-creed-iv-black-flag/zxpesokhkg/1-02%20Pyrates%20Beware.mp3",
        "https://vgmsite.com/soundtracks/battlefield-3/tabqykkp/01.%20Battlefield%203%20Main%20Theme.mp3",
        "https://archive.org/download/GrandTheftAuto4ThemeSong_201904/Grand%20Theft%20Auto%204%20Theme%20Song.mp3",
        "https://epsilon.vgmsite.com/soundtracks/assassin-s-creed-2/jlrprchapt/1-03%20Ezio%27s%20Family.mp3",
        "https://epsilon.vgmsite.com/soundtracks/assassin-s-creed-2/nkantwuktr/1-01%20Earth.mp3",
        "https://epsilon.vgmsite.com/soundtracks/mass-effect-3-gamerip-2012/nchtmgcz/304.%20End%20of%20Cycle.mp3"
    ]
  }
  ' | ConvertFrom-Json
$sync.configs.Quotes = '{
  "Q": [
    "إما تموت بطلا، أو تعيش طويلاً حتى ترى نفسك تتحول إلى الشرير",
    "بعض الرجال يريدون فقط مشاهدة العالم يحترق",
    "الخوف هو أكبر سلاح لديك، والأمل هو الذي يعطيك القوة للمضي قدمًا",
    "الصمت ليس دائمًا علامة على الضعف، بل قوة الروح",
    "إنهم يكرهون النور، لأنهم يخشون الحقيقة",
    "أنت دائما تخشى ما لا تفهمه",
    "التعاون مع الشر لا يجعلك تفوز. إنه يجعلك مثله",
    "القتال الحقيقي هو دائمًا ضد الذات",
    "القوة ليست فقط قوة الجسد، بل قوة العقل والروح أيضًا",
    "الوحدة هي أسوأ أشكال العقوبة",
    "الجمال الحقيقي لا يكمن في المظهر الخارجي، بل في النية والروح",
    "ليس كل ما نخاف منه سيئًا، وليس كل ما نحبه جيدًا",
    "ظننت أنه يمكننا أن نكون رجالاً شرفاء في زمن غير شريف",
    "أعطي الرجل سلاحا يمكنه أن يسرق بنك لكن اعطيه بنك يمكنه أن يسرق العالم",
    "أنت تعتقد أن الظلام هو حليفك لكنك تبنيت الظلام , انا لقد ولدت فيه",
    "لا يغرنك من تكلم حسناً عنك ولا يؤذيك من تكلم سيئاً عليك",
    "اختر أن تكون شمعة تضيء دروب الآخرين، ولا تكن ظلامًا يعكر جوهر الحياة",
    "الأصدقاء كالنجوم، لا تراها دوماً ولكنك تعلم أنها موجودة",
    "النية خير معيار للأفعال",
    "الإيمان هو أن ترى الشيء الذي لا يمكن رؤيته بالعين",
    "الحقيقة تجعلك حرًا",
    "الحياة قصيرة، استخدمها بحكمة",
    "ما الفرق ما بين الناقة والجمل",
    "العادلة شيئ و القانون شيئ",
    "ألحرية لا تُعطى بل تأخذ",
    "ما أخذ بالقوة لا يٌسترد إلا بالقوة",
    "الجهل سيئ و من صناعة الانظمة سلاح بينفع في كل زمان",
    "الدنيا أختبار و احنا زي النار هنور ولا هنحرق احنا اللى بنختار",
    "كل ما احلم به جرفته الامواج بعيدا",
    "نظرت للسماء لم اجد غير السواد فاكتفيت بالبكاء مادهاكي يا بلادي",
    "قلوبكم تفتت وصارت كالحجار ضميركم غفى هفى اردتكم القذارة",
    "من جاءني رحيما بادلته احتراما",
    "ولدت من جديد حينما رأيت ذلك"
  ]
}
' | ConvertFrom-Json
$sync.configs.themes = '{
    "matrix": {
      "BGButtonColor": "#00FF00",
      "FGButtonColor": "#0000FF"
    },

    "dark": {
      "BGButtonColor": "#FF0000",
      "FGButtonColor": "#FFFF00"
    },
    "light": {
      "BGButtonColor": "#000000",
      "FGButtonColor": "#FFFFFF"
    }
  }
  ' | ConvertFrom-Json
$sync.configs.tweaks = '[
  {
    "name": "System File Checker",
    "description": "Use the System File Checker tool to repair missing or corrupted system files",
    "repo": "null",
    "script": "sfc /scannow;",
    "check": "true",
    "category": "tweak"
  },
  {
    "name": "Disk Cleanup",
    "description": "Clean temporary files that are not necessary",
    "repo": "null",
    "script": "cleanmgr.exe /d C: /VERYLOWDISK Dism.exe /online /Cleanup-Image /StartComponentCleanup /ResetBase;",
    "check": "true",
    "category": "tweak"
  },
  {
    "name": "Restore All Windows Services to Default",
    "description": "If you face a problem with some system services, you can restore all services to Default.",
    "repo": "null",
    "script": "Invoke-RestMethod https://raw.githubusercontent.com/emadadel4/WindowsTweaks/main/restore.bat | Invoke-Expression;",
    "check": "true",
    "category": "tweak"
  },
  {
    "name": "Remove Folder Shortcuts From Windows'' File Explorer",
    "description": "Remove Documents, Videos, Pictures, Desktop. Shortcuts from File Explorer ",
    "repo": "https://github.com/emadadel4/WindowsTweaks",
    "script": "Invoke-RestMethod https://raw.githubusercontent.com/emadadel4/WindowsTweaks/main/rm.ps1 | Invoke-Expression;",
    "check": "true",
    "category": "tweak"
  },
  {
    "name": "Fix stutter in games",
    "description": "Fix Stutter in Games (Disable GameBarPresenceWriter). Windows 10/11",
    "repo": "https://github.com/emadadel4/Fix-Stutter-in-Games",
    "script": "Invoke-RestMethod https://raw.githubusercontent.com/emadadel4/Fix-Stutter-in-Games/main/fix.ps1 | Invoke-Expression;",
    "check": "true",
    "category": "tweak"
  },
  {
    "name": "Remove Unnecessary Windows 10 Apps",
    "description": "BingNews, GetHelp, Getstarted, Messaging, Microsoft3DViewer, MicrosoftOfficeHub, MicrosoftSolitaireCollection, News, Office.Lens, Office.OneNote, Office.Sway, OneConnect, People, Print3D, RemoteDesktop, SkypeApp, StorePurchaseApp, Office.Todo.List, Whiteboard, WindowsAlarms, WindowsCamera, windowscommunicationsapps, WindowsFeedbackHub, WindowsMaps, WindowsSoundRecorder, Xbox.TCUI, XboxApp, XboxGameOverlay, XboxIdentityProvider, XboxSpeechToTextOverlay, ZuneMusic, ZuneVideo, Windows.Cortana, MSPaint",
    "repo": "https://github.com/emadadel4/WindowsTweaks",
    "script": "Invoke-RestMethod https://raw.githubusercontent.com/emadadel4/WindowsTweaks/main/debloater.ps1 | Invoke-Expression;",
    "check": "true",
    "category": "tweak"
  },
  {
    "name": "Enable the Ultimate Performance Power Plan",
    "description": "Enable the Ultimate Performance Power Plan",
    "repo": "https://github.com/emadadel4/WindowsTweaks",
    "script": "powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61;",
    "fromUrl": "true",
    "category": "tweak"
  },
  {
    "name": " Reset the TCP/IP Stack",
    "description": "If you have an internet problem, Reset network configuration",
    "repo": "null",
    "script": "netsh int ip reset;",
    "check": "true",
    "category": "tweak"
  },
  {
    "name": "Setup Auto login",
    "description": "Setup auto login Windows username",
    "repo": "null",
    "script": "curl.exe -ss \"https://live.sysinternals.com/Autologon.exe\" -o $env:temp\\autologin.exe ; cmd /c $env:temp\\autologin.exe /accepteula",
    "check": "true",
    "category": "tweak"
  },
  {
    "name": "Disables People icon on Taskbar",
    "description": "Disables People on taskbar",
    "repo": "null",
    "script": "If (Test-Path ''HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\People'') { Set-ItemProperty ''HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\People'' -Name PeopleBand -Value 0 -Verbose }",
    "check": "true",
    "category": "tweak"
  },
  {
    "name": "Disables suggestions on start menu",
    "description": "Disables suggestions on start menu",
    "repo": "null",
    "script": "if (Test-Path ''HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\ContentDeliveryManager'') { Set-ItemProperty ''HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\ContentDeliveryManager'' -Name SystemPaneSuggestionsEnabled -Value 0 -Verbose }",
    "check": "true",
    "category": "tweak"
  },
  {
    "name": "Turns off Data Collection",
    "description": "This tweak disables data collection on your Windows system by modifying the registry setting for telemetry. It checks if the specified registry path exists and if so, sets the AllowTelemetry value to 0, effectively turning off telemetry.",
    "repo": "null",
    "script": "If (Test-Path ''HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\DataCollection'') { Set-ItemProperty ''HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\DataCollection'' -Name AllowTelemetry -Value 0 -Verbose }",
    "check": "false",
    "category": "tweak"
  },
  {
    "name": "Prevents bloatware applications from returning",
    "description": "This tweak aims to prevent bloatware applications from returning on your Windows system. It checks if a specific registry path exists, and if not, it creates it. Then, it sets a registry value to disable Windows consumer features, thereby reducing the likelihood of bloatware apps being installed or reinstalled.",
    "repo": "null",
    "script": "If (!(Test-Path ''HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\CloudContent'')) { Mkdir ''HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\CloudContent'' -ErrorAction SilentlyContinue; New-ItemProperty ''HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\CloudContent'' -Name DisableWindowsConsumerFeatures -Value 1 -Verbose -ErrorAction SilentlyContinue }",
    "check": "true",
    "category": "tweak"
  },
  {
    "name": "Stops the Windows Feedback Experience",
    "description": "This tweak aims to stop Windows Feedback by creating necessary registry keys if they do not exist. It checks if the specified registry path exists, and if not, it creates the required keys. Then, it sets a registry value to disable Windows Feedback by setting the PeriodInNanoSeconds value to 0, effectively stopping the feedback mechanism.",
    "repo": "null",
    "script": "If (!(Test-Path ''HKCU:\\Software\\Microsoft\\Siuf\\Rules\\PeriodInNanoSeconds'')) { mkdir ''HKCU:\\Software\\Microsoft\\Siuf'' -ErrorAction SilentlyContinue; mkdir ''HKCU:\\Software\\Microsoft\\Siuf\\Rules'' -ErrorAction SilentlyContinue; mkdir ''HKCU:\\Software\\Microsoft\\Siuf\\Rules\\PeriodInNanoSeconds'' -ErrorAction SilentlyContinue; New-ItemProperty ''HKCU:\\Software\\Microsoft\\Siuf\\Rules\\PeriodInNanoSeconds'' -Name PeriodInNanoSeconds -Value 0 -Verbose -ErrorAction SilentlyContinue }; If (Test-Path ''HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\AdvertisingInfo'') { Set-ItemProperty ''HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\AdvertisingInfo'' -Name Enabled -Value 0 -Verbose }",
    "check": "true",
    "category": "tweak"
  },
  {
    "name": "Disable Cortana",
    "description": "This tweak aims to disable Cortana by modifying the registry settings related to Windows Search. It checks if the specified registry path exists, and if so, it sets the AllowCortana value to 0, effectively disabling Cortana''s functionality.",
    "repo": "null",
    "script": "If (Test-Path ''HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Windows Search'') { Set-ItemProperty ''HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows\\Windows Search'' -Name AllowCortana -Value 0 -Verbose }",
    "check": "true",
    "category": "tweak"
  }
]
' | ConvertFrom-Json
$inputXML =  '
<!--Window-->
    <Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        x:Name="Window" Title="ITT @emadadel4" WindowStartupLocation = "CenterScreen" 
        Background="{DynamicResource BGColor}"
        Height="500" Width="755" MinWidth="755" MinHeight="400" ShowInTaskbar = "True" Icon="https://raw.githubusercontent.com/emadadel4/ITT/main/icon.ico">
    
        <Window.Resources>

            <!--Button Style-->
      <Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource FGColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource DefaultTextColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="20" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                        
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BGButtonColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource FGButtonColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
<!--End Button Style-->

<!--Textbox Style-->
  <Style TargetType="TextBox">
      <Setter Property="Foreground" Value="{DynamicResource FGTextColor}"/>
      <Setter Property="Background" Value="{DynamicResource FGColor}"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="TextBox">
                  <Border Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          CornerRadius="15"> <!-- Set CornerRadius here -->
                      <ScrollViewer x:Name="PART_ContentHost" />
                  </Border>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
      <Style.Triggers>
              <Trigger Property="IsFocused" Value="True">
                  <Setter Property="BorderThickness" Value="1"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource BGButtonColor}"/>
              </Trigger>
          </Style.Triggers>
  </Style>
<!--End Textbox Style-->

<!--TextBlock Style-->
  <Style TargetType="TextBlock">
      <Setter Property="Foreground" Value="{DynamicResource FGTextColor}"/>
  </Style>
<!--End TextBlock Style-->

<!--CheckBox Style-->
  <Style TargetType="CheckBox">
      <Setter Property="Foreground" Value="{DynamicResource FGTextColor}"/>
      <Setter Property="Margin" Value="8"/>

  </Style>
<!--End CheckBox Style-->

<!--Menu Style-->
  <Style TargetType="Menu">
      <Setter Property="Background" Value="{DynamicResource BGColor}"/>
  </Style>
<!--End Menu Style-->

<!--MenuItem Style-->
  <Style TargetType="MenuItem">
      <Setter Property="Background" Value="{DynamicResource BGColor}"/>
      <Setter Property="Foreground" Value="{DynamicResource DefaultTextColor}"/>
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="MenuItem">
                  <Border Background="{DynamicResource BGColor}"
                          BorderThickness="0"> <!-- Set BorderThickness to 0 -->
                      <Grid>
                          <ContentPresenter Content="{TemplateBinding Header}"
                                          Margin="6"/>
                          <Popup IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                              AllowsTransparency="True"
                              Focusable="False"
                              PopupAnimation="Fade">
                              <Border Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                      BorderThickness="0"> <!-- Set BorderThickness to 0 -->
                                  <ScrollViewer CanContentScroll="True"
                                              Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                      <ItemsPresenter Margin="0"/>
                                  </ScrollViewer>
                              </Border>
                          </Popup>
                      </Grid>
                  </Border>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>
<!--End MenuItem Style-->

<!--ListViewItem Style-->
    <Style TargetType="ListViewItem">
        <Setter Property="Background" Value="{DynamicResource FGColor}"/>
    </Style>
<!--End ListViewItem Style-->

<!--Scrollbar Thumbs-->
  <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type Thumb}">
                  <Grid x:Name="Grid">
                      <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                      <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{TemplateBinding Background}" />
                  </Grid>
                  <ControlTemplate.Triggers>
                      <Trigger Property="Tag" Value="Horizontal">
                          <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                          <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                      </Trigger>
                  </ControlTemplate.Triggers>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>
  <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
      <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
      <Setter Property="Foreground" Value="{DynamicResource FGColor}" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Width" Value="8" />
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type ScrollBar}">
                  <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                      <Grid.RowDefinitions>
                          <RowDefinition Height="0.00001*" />
                      </Grid.RowDefinitions>
                      <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                          <Track.Thumb>
                              <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                          </Track.Thumb>
                          <Track.IncreaseRepeatButton>
                              <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                          </Track.IncreaseRepeatButton>
                          <Track.DecreaseRepeatButton>
                              <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                          </Track.DecreaseRepeatButton>
                      </Track>
                  </Grid>
                  <ControlTemplate.Triggers>
                      <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                          <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                      </Trigger>
                      <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                          <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                      </Trigger>
                      <Trigger Property="IsEnabled" Value="false">
                          <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                      </Trigger>
                      <Trigger Property="Orientation" Value="Horizontal">
                          <Setter TargetName="GridRoot" Property="LayoutTransform">
                              <Setter.Value>
                                  <RotateTransform Angle="-90" />
                              </Setter.Value>
                          </Setter>
                          <Setter TargetName="PART_Track" Property="LayoutTransform">
                              <Setter.Value>
                                  <RotateTransform Angle="-90" />
                              </Setter.Value>
                          </Setter>
                          <Setter Property="Width" Value="Auto" />
                          <Setter Property="Height" Value="8" />
                          <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                          <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                          <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                      </Trigger>
                  </ControlTemplate.Triggers>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>
<!--End Scrollbar Thumbs-->

<!--TabControl Style-->
    <Style TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" CornerRadius="15" BorderThickness="0,0,0,0" Padding="5" BorderBrush="Gainsboro"  Margin="10,5">
                        <ContentPresenter x:Name="ContentSite"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        ContentSource="Header"
                        Margin="10,2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BGButtonColor}" />
                            <Setter Property="Foreground" Value="White" />

                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource FGColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource DefaultTextColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<!--End TabControl Style-->

            
            <!--Light Theme styles-->

        <!--Light mode -->
                <ResourceDictionary x:Key="LightTheme">
                        <SolidColorBrush x:Key="BGColor" Color="White"/>
                        <SolidColorBrush x:Key="FGColor" Color="WhiteSmoke"/>
                        <SolidColorBrush x:Key="BGButtonColor" Color="#382bf0  " />
                        <SolidColorBrush x:Key="FGButtonColor" Color="White" />
                        <SolidColorBrush x:Key="FGTextColor" Color="Black" />
                        <SolidColorBrush x:Key="DefaultTextColor" Color="Black"/>
                        <SolidColorBrush x:Key="BorderBrush" Color="#212121"/>
                </ResourceDictionary>
        <!--Light mode -->

        <!--Dark mode-->
                <ResourceDictionary x:Key="DarkTheme">
                        <SolidColorBrush x:Key="BGColor" Color="#121212 "/>
                        <SolidColorBrush x:Key="FGColor" Color="#282828"/>
                        <SolidColorBrush x:Key="BGButtonColor" Color="#1DB954" />
                        <SolidColorBrush x:Key="FGButtonColor" Color="White" />
                        <SolidColorBrush x:Key="FGTextColor" Color="WhiteSmoke" />
                        <SolidColorBrush x:Key="DefaultTextColor" Color="White"/>
                        <SolidColorBrush x:Key="BorderBrush" Color="WhiteSmoke" />
                </ResourceDictionary>
        <!--Dark mode -->

<!--Light Theme-->


        </Window.Resources>

        <Grid>
        
            <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="222"/>
            </Grid.ColumnDefinitions>

            <!--Header Section-->


                    <Menu Grid.Row="0" Grid.ColumnSpan="3" Background="Transparent" BorderBrush="Transparent" BorderThickness="0">
                        <MenuItem Header="File" BorderBrush="Transparent" BorderThickness="0">
                            <MenuItem Name="load" Header="Load Preset"/>
                            <MenuItem Name="save" Header="Save Preset"/>
                        </MenuItem>
                        <MenuItem Name="themeText" Header="Light Mode"/>
                    </Menu>


                        <!--Logo-->
                            <StackPanel Margin="20" Orientation="Horizontal" HorizontalAlignment="Left"  VerticalAlignment="Center" Grid.Row="1" Grid.ColumnSpan="3" >

                                <Ellipse Name="about" Width="50" Height="50" Cursor="Hand">
                                    <Ellipse.Fill>
                                        <ImageBrush ImageSource="https://avatars.githubusercontent.com/u/19177373?v=4.png" />
                                    </Ellipse.Fill>
                                </Ellipse>
                        <!--End Logo-->

                        <!--Catagory Section-->
                            <StackPanel Name="catg" Margin="20,0,0,0" Orientation="Horizontal" HorizontalAlignment="Left">

                            <ComboBox SelectedIndex="0"  Margin="10,10,0,13" Name="cat" HorizontalAlignment="Left" VerticalAlignment="Top" Width="Auto" Height="Auto">
                                <ComboBoxItem Content="All"></ComboBoxItem>
                                <ComboBoxItem Content="Media"></ComboBoxItem>
                                <ComboBoxItem Content="Browsers"></ComboBoxItem>
                                <ComboBoxItem Content="Documents"></ComboBoxItem>
                                <ComboBoxItem Content="Compression"></ComboBoxItem>
                                <ComboBoxItem Content="Communication"></ComboBoxItem>
                                <ComboBoxItem Content="File Sharing"></ComboBoxItem>
                                <ComboBoxItem Content="Imaging"></ComboBoxItem>
                                <ComboBoxItem Content="Gaming"></ComboBoxItem>
                                <ComboBoxItem Content="Utilities"></ComboBoxItem>
                                <ComboBoxItem Content="Developer"></ComboBoxItem>
                                <ComboBoxItem Content="Security"></ComboBoxItem>
                            </ComboBox>

                                </StackPanel>
                            </StackPanel>
                        <!--End Catagory Section-->

            <!--End Header Section-->

                <!--TabControl-->
        <TabControl x:Name="taps" TabStripPlacement="Left" Margin="0, 10, 0, 10" Grid.Row="2"  BorderBrush="Transparent" Foreground="White" Background="Transparent">
                <TabItem Header="Apps" Name="apps" BorderBrush="{x:Null}" Padding="16">
                    <TabItem.Content>
                        <ListView Margin="10" ScrollViewer.VerticalScrollBarVisibility="Auto" Name="list" BorderBrush="{x:Null}" Background="{x:Null}">
                            <CheckBox Content="Thorium" Tag="Browsers" /><CheckBox Content="Firefox" Tag="Browsers" /><CheckBox Content="Add block extension [Firefox]" Tag="Browsers" /><CheckBox Content="Microsoft Edge" Tag="Browsers" /><CheckBox Content="Google Chrome" Tag="Browsers" /><CheckBox Content="uBlock Origin extension [Chrome]" Tag="Browsers" /><CheckBox Content="Chromium" Tag="Browsers" /><CheckBox Content="Brave" Tag="Browsers" /><CheckBox Content="Tor Browser" Tag="Browsers" /><CheckBox Content="Opera" Tag="Browsers" /><CheckBox Content="Internet Download Manager" Tag="Browsers" /><CheckBox Content="K-Lite Mega Codec Pack" Tag="Media" /><CheckBox Content="PotPlayer" Tag="Media" /><CheckBox Content="VLC" Tag="Media" /><CheckBox Content="Kodi" Tag="Media" /><CheckBox Content="Jellyfin" Tag="Media" /><CheckBox Content="Winamp" Tag="Media" /><CheckBox Content="Aimp" Tag="Media" /><CheckBox Content="Spotify" Tag="Media" /><CheckBox Content="FastStone Image Viewer" Tag="Imaging" /><CheckBox Content="OpenOffice" Tag="Documents" /><CheckBox Content="FoxitReader" Tag="Documents" /><CheckBox Content="LibreOffice" Tag="Documents" /><CheckBox Content="SumatraPDF" Tag="Documents" /><CheckBox Content="WinRAR" Tag="Compression" /><CheckBox Content="7-Zip" Tag="Compression" /><CheckBox Content="PeaZip" Tag="Compression" /><CheckBox Content="QQPlayer" Tag="Media" /><CheckBox Content="Telegram Desktop" Tag="Communication" /><CheckBox Content="Signal" Tag="Communication" /><CheckBox Content="Meta Messenger" Tag="Communication" /><CheckBox Content="Skype" Tag="Communication" /><CheckBox Content="Zoom" Tag="Communication" /><CheckBox Content="Microsoft Teams" Tag="Communication" /><CheckBox Content="Discord" Tag="Communication" /><CheckBox Content="TeamViewer" Tag="File Sharing" /><CheckBox Content="GIMP" Tag="Imaging" /><CheckBox Content="DirectX" Tag="Gaming" /><CheckBox Content="Microsoft Visual C++ Runtime - all versions" Tag="Gaming" /><CheckBox Content="Microsoft Visual C++ 2005 (x86) Redistributable" Tag="Gaming" /><CheckBox Content="Microsoft Visual C++ 2005 (x64) Redistributable" Tag="Gaming" /><CheckBox Content="Microsoft Visual C++ 2008 (x86) Redistributable" Tag="Gaming" /><CheckBox Content="Microsoft Visual C++ 2008 (x64) Redistributable" Tag="Gaming" /><CheckBox Content="Microsoft Visual C++ 2010 (x86) Redistributable" Tag="Gaming" /><CheckBox Content="Microsoft Visual C++ 2010 (x64) Redistributable" Tag="Gaming" /><CheckBox Content="Microsoft Visual C++ 2012 (x86) Redistributable" Tag="Gaming" /><CheckBox Content="Microsoft Visual C++ 2012 (x64) Redistributable" Tag="Gaming" /><CheckBox Content="Microsoft Visual C++ 2013 (x86) Redistributable" Tag="Gaming" /><CheckBox Content="Microsoft Visual C++ 2013 (x64) Redistributable" Tag="Gaming" /><CheckBox Content="Microsoft Visual C++ 2015-2022 (x64) Redistributable" Tag="Gaming" /><CheckBox Content="Microsoft Visual C++ 2015-2022  (x86) Redistributable" Tag="Gaming" /><CheckBox Content="NET Framework All Versions" Tag="Gaming" /><CheckBox Content="AMD Ryzen Chipset Drivers" Tag="Gaming" /><CheckBox Content="NVidia Display Driver" Tag="Gaming" /><CheckBox Content="NVIDIA GeForce" Tag="Gaming" /><CheckBox Content="Msi Afterburner" Tag="Gaming" /><CheckBox Content="NVIDIA PhysX" Tag="Gaming" /><CheckBox Content="Steam" Tag="Gaming" /><CheckBox Content="Epic Games Launcher " Tag="Gaming" /><CheckBox Content="Ubisoft Connect" Tag="Gaming" /><CheckBox Content="Origin" Tag="Gaming" /><CheckBox Content="Rockstar Games Launcher" Tag="Gaming" /><CheckBox Content="GameSave Manager" Tag="Gaming" /><CheckBox Content="StreamlabsOBS" Tag="Gaming" /><CheckBox Content="OBS Studio" Tag="Gaming" /><CheckBox Content="Logitech Gaming Software" Tag="Gaming" /><CheckBox Content="Lively Wallpaper" Tag="Gaming" /><CheckBox Content="Playnite" Tag="Gaming" /><CheckBox Content="Driver Easy" Tag="Utilities" /><CheckBox Content="Snappy Driver Installer" Tag="Utilities" /><CheckBox Content="Driver booster" Tag="Utilities" /><CheckBox Content="Driver Genius" Tag="Utilities" /><CheckBox Content="Display Driver Uninstaller" Tag="Utilities" /><CheckBox Content="Driver Store Explorer" Tag="Utilities" /><CheckBox Content="1Password" Tag="Utilities" /><CheckBox Content="MiniTool Partition Wizard" Tag="Utilities" /><CheckBox Content="AOMEI Partition Assistant Standard" Tag="Utilities" /><CheckBox Content="AOMEI Backupper" Tag="Utilities" /><CheckBox Content="Recuva recover" Tag="Utilities" /><CheckBox Content="CCleaner" Tag="Utilities" /><CheckBox Content="BCUninstaller" Tag="Utilities" /><CheckBox Content="HWiNFO" Tag="Utilities" /><CheckBox Content="Speccy" Tag="Utilities" /><CheckBox Content="FurMark" Tag="Utilities" /><CheckBox Content="Hard Disk Sentinel" Tag="Utilities" /><CheckBox Content="CPUID CPU-Z" Tag="Utilities" /><CheckBox Content="Mem Reduct" Tag="Utilities" /><CheckBox Content="HandBrake" Tag="Utilities" /><CheckBox Content="Rufus" Tag="Utilities" /><CheckBox Content="ImgBurn" Tag="Developer" /><CheckBox Content="Virtual CloneDrive" Tag="Utilities" /><CheckBox Content="Utilso" Tag="Utilities" /><CheckBox Content="Ventoy" Tag="Utilities" /><CheckBox Content="iVentoy" Tag="Utilities" /><CheckBox Content="AutoHotkey" Tag="Utilities" /><CheckBox Content="Rainmeter" Tag="Utilities" /><CheckBox Content="FxSound" Tag="Utilities" /><CheckBox Content="HiSuite" Tag="Utilities" /><CheckBox Content="Vysor" Tag="Utilities" /><CheckBox Content="Unifiedremote" Tag="Utilities" /><CheckBox Content="AnyDesk" Tag="File Sharing" /><CheckBox Content="Airdroid" Tag="File Sharing" /><CheckBox Content="UltraViewer" Tag="File Sharing" /><CheckBox Content="Wireless Network Watcher Portable" Tag="Utilities" /><CheckBox Content="qBittorrent" Tag="File Sharing" /><CheckBox Content="Google Earth Pro" Tag="Imaging" /><CheckBox Content="XAMPP" Tag="Developer" /><CheckBox Content="Visual Studio Professional 2022" Tag="Developer" /><CheckBox Content="Visual Studio Community 2022" Tag="Developer" /><CheckBox Content="Godot game engine" Tag="Developer" /><CheckBox Content="Unity Hub" Tag="Developer" /><CheckBox Content="Unity 3D" Tag="Developer" /><CheckBox Content="Blender" Tag="Developer" /><CheckBox Content="Visual Studio Code" Tag="Developer" /><CheckBox Content="Sublime Text 4" Tag="Developer" /><CheckBox Content="Atom" Tag="Developer" /><CheckBox Content="InnoSetup" Tag="Developer" /><CheckBox Content="PyCharm Community Edition" Tag="Developer" /><CheckBox Content="PyCharm Professional Edition" Tag="Developer" /><CheckBox Content="Jetbrains Rider" Tag="Developer" /><CheckBox Content="Node.js LTS" Tag="Developer" /><CheckBox Content="Electrum-LTS" Tag="Developer" /><CheckBox Content="Hugo" Tag="Developer" /><CheckBox Content="Notepad++" Tag="Developer" /><CheckBox Content="Windows Terminal" Tag="Developer" /><CheckBox Content="Powershell core" Tag="Developer" /><CheckBox Content="x64dbg Portable" Tag="Developer" /><CheckBox Content="dnSpy" Tag="Developer" /><CheckBox Content="Cheat Engine" Tag="Developer" /><CheckBox Content="Python" Tag="Developer" /><CheckBox Content="Git" Tag="Developer" /><CheckBox Content="GitHub Desktop" Tag="Developer" /><CheckBox Content="Docker Desktop" Tag="Developer" /><CheckBox Content="Docker Compose" Tag="Developer" /><CheckBox Content="PowerToys" Tag="Developer" /><CheckBox Content="Notion" Tag="Developer" /><CheckBox Content="FL Studio" Tag="Developer" /><CheckBox Content="Android Debug Bridge" Tag="Developer" /><CheckBox Content="Universal ADB Drivers" Tag="Developer" /><CheckBox Content="Scrcpy" Tag="Developer" /><CheckBox Content="VirtualBox" Tag="Developer" /><CheckBox Content="UltraISO" Tag="Developer" /><CheckBox Content="Vmware Workstation" Tag="Developer" /><CheckBox Content="oh-my-posh" Tag="Developer" /><CheckBox Content="Malwarebytes" Tag="Security" /><CheckBox Content="Kaspersky Virus Removal Tool" Tag="Security" /><CheckBox Content="Kaspersky Anti-Virus" Tag="Security" /><CheckBox Content="Avast Free Antivirus" Tag="Security" />
                        </ListView>
                    </TabItem.Content>
                </TabItem>
                <TabItem Header="Tweaks" x:Name="tweeksTab" Padding="16" BorderBrush="{x:Null}" Background="{x:Null}">
                    <TabItem.Content>
                        <ListView Name="tweaks"  Margin="10" ScrollViewer.VerticalScrollBarVisibility="Auto" BorderBrush="{x:Null}" Background="{x:Null}">
                            <CheckBox Content="System File Checker" /><CheckBox Content="Disk Cleanup" /><CheckBox Content="Restore All Windows Services to Default" /><CheckBox Content="Remove Folder Shortcuts From Windows'' File Explorer" /><CheckBox Content="Fix stutter in games" /><CheckBox Content="Remove Unnecessary Windows 10 Apps" /><CheckBox Content="Enable the Ultimate Performance Power Plan" /><CheckBox Content=" Reset the TCP/IP Stack" /><CheckBox Content="Setup Auto login" /><CheckBox Content="Disables People icon on Taskbar" /><CheckBox Content="Disables suggestions on start menu" /><CheckBox Content="Turns off Data Collection" /><CheckBox Content="Prevents bloatware applications from returning" /><CheckBox Content="Stops the Windows Feedback Experience" /><CheckBox Content="Disable Cortana" />
                        </ListView>
                    </TabItem.Content>
                </TabItem>
            </TabControl>
        <!--End TabControl-->

            <!--Main Section-->
                <Grid  Grid.Row="2" Grid.Column="2"  Grid.RowSpan="2">

                    <StackPanel Orientation="Vertical">


                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">

                            <Grid>
                                <TextBox Padding="8"
                                Width="188"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" 
                                Text="{Binding Text_searchInput}"
                                x:Name="searchInput" 
                                />

                                <TextBlock IsHitTestVisible="False" 
                                Text="Search"
                                VerticalAlignment="Center" 
                                HorizontalAlignment="Left"
                                Margin="16,0,0,0"
                                Foreground="{DynamicResource FGTextColor}">

                                <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, ElementName=searchInput}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </StackPanel>

                        <TextBlock Name="itemLink" 
                            Foreground="{DynamicResource BGButtonColor}" 
                            Visibility="Hidden" 
                            TextWrapping="Wrap" 
                            Text="" 
                            Margin="20,15,15,0" 
                        />

                        <ScrollViewer VerticalScrollBarVisibility="Auto"
                            Height="233"
                            Margin="20,15,15,0" 
                        >
                            <TextBlock Name="description" 
                                Text=""
                                TextWrapping="Wrap" 
                                Foreground="{DynamicResource DefaultTextColor}"/>
                        </ScrollViewer>

                        

                    </StackPanel>

                    <!--Install Button-->
                        <Button
                        Name="installBtn"
                        Content="Install"
                        FontSize="15"
                        Visibility="Hidden"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Bottom"
                        Width="100" Height="40" Margin="50"/>
                    <!--End Install Button-->

                    <!--Apply Button-->
                        <Button
                        Name="applyBtn"
                        Content="Apply"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Bottom"
                        FontSize="15"
                        Visibility="Hidden"
                        Width="100" Height="40" Margin="50"/>
                    <!--End Apply Button-->

                </Grid>
            <!--End Main Section-->

            <!--Footer Section-->
                <Grid Grid.Row="4">
                    <TextBlock Name="quotes"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center" 
                    Padding="16" TextWrapping="Wrap" 
                    Text=""
                    />
                </Grid>
            <!--End Footer Section-->

        </Grid>
        
    </Window>
<!--End Window-->


'
#===========================================================================
#region Load XMAL 
#===========================================================================

# Set the maximum number of threads for the RunspacePool to the number of threads on the machine
$maxthreads = [int]$env:NUMBER_OF_PROCESSORS

# Create a new session state for parsing variables into our runspace
$hashVars = New-object System.Management.Automation.Runspaces.SessionStateVariableEntry -ArgumentList 'sync',$sync,$Null
$InitialSessionState = [System.Management.Automation.Runspaces.InitialSessionState]::CreateDefault()

# Add the variable to the session state
$InitialSessionState.Variables.Add($hashVars)

# Create the runspace pool
$sync.runspace = [runspacefactory]::CreateRunspacePool(
    1,                      # Minimum thread count
    $maxthreads,            # Maximum thread count
    $InitialSessionState,   # Initial session state
    $Host                   # Machine to create runspaces on
)

# Open the RunspacePool instance
$sync.runspace.Open()


[void][System.Reflection.Assembly]::LoadWithPartialName('presentationframework')
[xml]$XAML = $inputXML

# Read the XAML file
$reader = (New-Object System.Xml.XmlNodeReader $xaml)
try { $sync["window"] = [Windows.Markup.XamlReader]::Load( $reader ) }
catch [System.Management.Automation.MethodInvocationException] {
    Write-Warning "We ran into a problem with the XAML code.  Check the syntax for this control..."
    Write-Host $error[0].Exception.Message -ForegroundColor Red
    If ($error[0].Exception.Message -like "*button*") {
        write-warning "Ensure your &lt;button in the `$inputXML does NOT have a Click=ButtonClick property.  PS can't handle this`n`n`n`n"
    }
}
catch {
    Write-Host "Unable to load Windows.Markup.XamlReader. Double-check syntax and ensure .net is installed."
}


# Catch controls
$sync.AppsListView = $sync['window'].FindName("list")
$sync.Description = $sync['window'].FindName("description")
$sync.Quotes = $sync['window'].FindName("quotes")
$sync.TweeaksListView = $sync['window'].FindName("tweaks")
$sync.itemLink = $sync['window'].FindName('itemLink')

$sync.installBtn = $sync['window'].FindName('installBtn') 

#===========================================================================
#endregion End Load XMAL 
#===========================================================================


#===========================================================================
#region Start Loops
#===========================================================================

# Define a function to update the description and link when an item is selected
function UpdateDescriptionAndLink {
    # Get the name of the selected application from the list
    $selectedAppName = $sync.AppsListView.SelectedItem.Content

    $sync.itemLink.Visibility = "Visible"

    # Loop through the list of applications in the configs and find the matching one
    foreach ($app in $sync.configs.applications) {

        if ($app.name -eq $selectedAppName) {

            # Update the description text block with the selected application's description
            $sync.Description.Text = $app.description
            # Update the link text block with the selected application's official website link
            $sync.itemLink.Text = "$($app.name) official website"
            break
        }
    }
}

# Define a function to open the official website of the selected application
function OpenOfficialWebsite {
    # Get the name of the selected application from the list
    $selectedAppName =  $sync.AppsListView.SelectedItem.Content

    # Loop through the list of applications in the configs and find the matching one
    foreach ($app in $sync.configs.applications) {
        if ($selectedAppName -eq $app.name) {
            # Open the official website of the selected application in the default web browser
            Start-Process ("https://duckduckgo.com/?hps=1&q=%5C" + $app.name)
            break
        }
    }
}

# Add event handlers
$sync.AppsListView.add_Loaded({
    
    # Add a selection changed event handler to the list control
    $sync.AppsListView.Add_SelectionChanged({
        UpdateDescriptionAndLink
    })

})

    # Add a mouse left button down event handler to the itemLink control
    $sync.itemLink.add_MouseLeftButtonDown({
        OpenOfficialWebsite
    })


    $sync.AppsListView.add_LostFocus({

        $sync.AppsListView.SelectedItem = $null
        $sync.itemLink.Visibility = "Hidden"
        $sync.Description.Text = ""

    })

# Add loaded event handler
$sync.TweeaksListView.add_Loaded({
   
    # Add selection changed event handler
    $sync.TweeaksListView.Add_SelectionChanged({

        $selectedItem = $sync.TweeaksListView.SelectedItem.Content
        foreach ($data in $sync.configs.tweaks) {

            if ($data.name -eq $selectedItem) {

                $sync.Description.Text = $data.description
                $sync.itemLink.Visibility = if ($data.repo -ne "null") { "Visible" } else { "Hidden" }
                $sync.itemLink.Text = "Github repository"
                break
            }
        }
    })

})

# Add mouse left button down event handler for item link
$sync.itemLink.add_MouseLeftButtonDown({

    $selectedItem = $sync.TweeaksListView.SelectedItem.Content

    foreach ($data in $sync.configs.tweaks) {
        if ($selectedItem -eq $data.name -and $data.repo -ne "null") {
            Start-Process $data.repo
            break
        }
    }
})


$sync.TweeaksListView.add_LostFocus({

    $sync.TweeaksListView.SelectedItem = $null
    $sync.itemLink.Visibility = "Hidden"
    $sync.Description.Text = ""
})

#===========================================================================
#endregion End Loopss 
#===========================================================================


CheckChoco
GetQuotes *> $null

#check currnet Theme
if ($sync.theme -eq "Dark") {
  Switch-ToDarkMode
  $sync.isDarkMode = "Dark"
} 
else 
{
  Switch-ToLightMode
  $sync.isDarkMode = "Light"
}

#===========================================================================
#region Start Events
#===========================================================================

# Buttons
$sync['window'].FindName('taps').add_SelectionChanged({ChangeTap})
$sync['window'].FindName('installBtn').add_click({Invoke-Install})
$sync['window'].FindName('applyBtn').add_click({ApplyTweaks})
$sync['window'].FindName('searchInput').add_TextChanged({Search})
$sync['window'].FindName('searchInput').add_GotFocus({ClearFilter})
$sync['window'].FindName('about').add_MouseLeftButtonDown({About})
$sync['window'].FindName('themeText').add_click({Toggle-Theme})
$sync['window'].FindName('cat').add_SelectionChanged({FilterByCat( $sync['window'].FindName('cat').SelectedItem.Content)})
$sync['window'].FindName('save').add_click({
  
  ClearFilter
  SaveItemsToJson

})
$sync['window'].FindName('load').add_click({LoadJson})

$sync['window'].add_Closing({

  Write-Host "Bye see you soon :)"
  StopMusic
  StopAllRunspace

})

#endregion End Events 
#===========================================================================

PlayMusic *> $null
$sync["window"].ShowDialog() | out-null
