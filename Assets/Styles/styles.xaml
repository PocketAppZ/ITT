<!--Button Style-->
      <Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource FGColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource DefaultTextColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="20" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                        
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BGButtonColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource FGButtonColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
<!--End Button Style-->

<!--Textbox Style-->
  <Style TargetType="TextBox">
    <Setter Property="Background" Value="{DynamicResource BGColor}"/>
      <Setter Property="Foreground" Value="{DynamicResource FGTextColor}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="TextBox">
                  <Border Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          CornerRadius="15"> <!-- Set CornerRadius here -->
                      <ScrollViewer x:Name="PART_ContentHost" />
                  </Border>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
      <Style.Triggers>
              <Trigger Property="IsFocused" Value="True">
                  <Setter Property="BorderThickness" Value="1"/>
                  <Setter Property="BorderBrush" Value="{DynamicResource BGButtonColor}"/>
                  <Setter Property="Background" Value="{DynamicResource FGColor}"/>
              </Trigger>
          </Style.Triggers>
  </Style>
<!--End Textbox Style-->

<!--TextBlock Style-->
  <Style TargetType="TextBlock">
      <Setter Property="Foreground" Value="{DynamicResource FGTextColor}"/>
  </Style>
<!--End TextBlock Style-->

<!--CheckBox Style-->
  <Style TargetType="CheckBox">
      <Setter Property="Foreground" Value="{DynamicResource FGTextColor}"/>
      <Setter Property="Margin" Value="8"/>

  </Style>
<!--End CheckBox Style-->

<!--Menu Style-->
  <Style TargetType="Menu">
      <Setter Property="Background" Value="{DynamicResource BGColor}"/>
      <Setter Property="Margin" Value="15"/>
  </Style>
<!--End Menu Style-->

<!--MenuItem Style-->
  <Style TargetType="MenuItem">
      <Setter Property="Background" Value="{DynamicResource BGColor}"/>
      <Setter Property="Foreground" Value="{DynamicResource DefaultTextColor}"/>
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="MenuItem">
                  <Border Background="{DynamicResource BGColor}"
                    BorderBrush="WhiteSmoke"
                    BorderThickness="0"> <!-- Set BorderThickness to 0 -->
                      <Grid>
                          <ContentPresenter Content="{TemplateBinding Header}"
                                          Margin="5"/>
                          <Popup IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                              AllowsTransparency="True"
                              Focusable="True"
                              PopupAnimation="None">
                              <Border Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                      BorderThickness="15"> <!-- Set BorderThickness to 0 -->
                                  <ScrollViewer CanContentScroll="True"
                                              Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                      <ItemsPresenter Margin="0"/>
                                  </ScrollViewer>
                              </Border>
                        
                          </Popup>
                      </Grid>
                  </Border>
              </ControlTemplate>
          </Setter.Value>
      </Setter>

  </Style>
<!--End MenuItem Style-->

<!--ListViewItem Style-->
    <Style TargetType="ListViewItem">
        <Setter Property="Background" Value="{DynamicResource FGColor}"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>
<!--End ListViewItem Style-->

<!--Scrollbar Thumbs-->
  <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type Thumb}">
                  <Grid x:Name="Grid">
                      <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                      <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Background="{TemplateBinding Background}" />
                  </Grid>
                  <ControlTemplate.Triggers>
                      <Trigger Property="Tag" Value="Horizontal">
                          <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                          <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                      </Trigger>
                  </ControlTemplate.Triggers>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>
  <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
      <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
      <Setter Property="Foreground" Value="{DynamicResource BGButtonColor}" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Width" Value="8" />
      <Setter Property="Template">
          <Setter.Value>
              <ControlTemplate TargetType="{x:Type ScrollBar}">
                  <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                      <Grid.RowDefinitions>
                          <RowDefinition Height="0.00001*" />
                      </Grid.RowDefinitions>
                      <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                          <Track.Thumb>
                              <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                          </Track.Thumb>
                          <Track.IncreaseRepeatButton>
                              <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                          </Track.IncreaseRepeatButton>
                          <Track.DecreaseRepeatButton>
                              <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                          </Track.DecreaseRepeatButton>
                      </Track>
                  </Grid>
                  <ControlTemplate.Triggers>
                      <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                          <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                      </Trigger>
                      <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                          <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                      </Trigger>
                      <Trigger Property="IsEnabled" Value="false">
                          <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                      </Trigger>
                      <Trigger Property="Orientation" Value="Horizontal">
                          <Setter TargetName="GridRoot" Property="LayoutTransform">
                              <Setter.Value>
                                  <RotateTransform Angle="-90" />
                              </Setter.Value>
                          </Setter>
                          <Setter TargetName="PART_Track" Property="LayoutTransform">
                              <Setter.Value>
                                  <RotateTransform Angle="-90" />
                              </Setter.Value>
                          </Setter>
                          <Setter Property="Width" Value="Auto" />
                          <Setter Property="Height" Value="8" />
                          <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                          <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                          <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                      </Trigger>
                  </ControlTemplate.Triggers>
              </ControlTemplate>
          </Setter.Value>
      </Setter>
  </Style>
<!--End Scrollbar Thumbs-->

<!--TabControl Style-->
    <Style TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" CornerRadius="15" BorderThickness="0,0,0,0" Padding="5" BorderBrush="Gainsboro"  Margin="10,5">
                        <ContentPresenter x:Name="ContentSite"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        ContentSource="Header"
                        Margin="10,2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BGButtonColor}" />
                            <Setter Property="Foreground" Value="White" />

                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource FGColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource DefaultTextColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
<!--End TabControl Style-->