function Send-SystemInfo {
    param (
        [string]$FirebaseUrl,
        [string]$Key
    )

    function Get-RAMInfo {
        $ram = Get-CimInstance -ClassName Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum
        return [math]::Round($ram.Sum / 1GB, 2)
    }

    function Get-GPUInfo {
        $gpu = Get-CimInstance -ClassName Win32_VideoController
        return $gpu.Name
    }

    # Construct the URL with the key
    $firebaseUrlWithKey = "$FirebaseUrl/$Key.json"

    # Check if the key exists
    $existingData = Invoke-RestMethod -Uri $firebaseUrlWithKey -Method Get -ErrorAction SilentlyContinue

    if ($existingData) {
        # If data exists, get the current value of "runs" and increment it
        $runs = $existingData.runs + 1
    }
    else {
        # If data doesn't exist, set "runs" to 1
        $runs = 1
    }

    # PC info
    $pcInfo = @{
        "hostname" = $env:COMPUTERNAME
        "OS" = [Environment]::OSVersion.VersionString
        "Username" = $env:USERNAME
        "Ram" = Get-RAMInfo
        "GPU" = Get-GPUInfo
        "start at" = (Get-Date -Format "yyyy-MM-dd HH:mm:ss")
        "runs" = $runs
    }

    # Convert to JSON
    $json = $pcInfo | ConvertTo-Json

    # Set headers
    $headers = @{
        "Content-Type" = "application/json"
    }

    # Update Firebase database with the new value of "runs"
    Invoke-RestMethod -Uri $firebaseUrlWithKey -Method Put -Body $json -Headers $headers

    $firebaseUrlRoot = "$FirebaseUrl.json"

    $response = Invoke-RestMethod -Uri $firebaseUrlRoot -Method Get -ErrorAction SilentlyContinue

    $totalKeys = $response | Get-Member -MemberType NoteProperty | Measure-Object | Select-Object -ExpandProperty Count

    # Count the number of keys directly under the root
    Write-Output "Number of devices that run this command: ${totalKeys}"
}

# Call the function to send system info to Firebase
$FirebaseUrl = "https://ittools-7d9fe-default-rtdb.firebaseio.com/"
$Key = $env:COMPUTERNAME

